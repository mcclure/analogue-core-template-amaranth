/* Generated by Amaranth Yosys 0.25 (PyPI ver 0.25.0.0.post77, git sha1 e02b7f64b) */

module amaranth_core(audio_dac, audio_lrck, audio_mclk, clk, cont1_joy, cont1_key, cont1_trig, cont2_joy, cont2_key, cont2_trig, cont3_joy, cont3_key, cont3_trig, cont4_joy, cont4_key, cont4_trig, dbg_rx, dbg_tx, init_done, rst, user1
, user2, video_de, video_hs, video_rgb, video_rgb_clk, video_rgb_clk90, video_skip, video_vs, audio_adc);
  reg \$auto$verilog_backend.cc:2083:dump_module$1  = 0;
  wire \$100 ;
  wire \$102 ;
  wire \$104 ;
  wire \$106 ;
  wire \$109 ;
  wire \$11 ;
  wire \$111 ;
  wire \$113 ;
  wire \$115 ;
  wire \$118 ;
  wire \$120 ;
  wire \$122 ;
  wire \$124 ;
  wire \$126 ;
  wire \$128 ;
  wire \$13 ;
  wire \$130 ;
  wire \$132 ;
  wire \$136 ;
  wire \$138 ;
  wire \$141 ;
  wire \$143 ;
  wire \$147 ;
  wire \$149 ;
  wire \$15 ;
  wire \$152 ;
  wire \$154 ;
  wire \$158 ;
  wire \$160 ;
  wire \$163 ;
  wire \$165 ;
  wire \$167 ;
  wire \$169 ;
  wire \$17 ;
  wire \$171 ;
  wire \$173 ;
  wire \$175 ;
  wire \$177 ;
  wire \$179 ;
  wire \$181 ;
  wire \$183 ;
  wire \$185 ;
  wire \$187 ;
  wire \$189 ;
  wire \$19 ;
  wire [8:0] \$191 ;
  wire [8:0] \$192 ;
  wire [7:0] \$194 ;
  wire \$196 ;
  wire \$198 ;
  wire \$203 ;
  wire [6:0] \$205 ;
  wire [6:0] \$206 ;
  wire \$208 ;
  wire \$21 ;
  wire \$210 ;
  wire \$211 ;
  wire \$214 ;
  wire \$216 ;
  wire \$218 ;
  wire \$220 ;
  wire \$222 ;
  wire \$223 ;
  wire [2:0] \$226 ;
  wire [2:0] \$227 ;
  wire \$229 ;
  wire \$23 ;
  wire \$231 ;
  wire \$233 ;
  wire \$235 ;
  wire [10:0] \$237 ;
  wire [10:0] \$238 ;
  wire \$240 ;
  wire \$242 ;
  wire [10:0] \$244 ;
  wire [10:0] \$245 ;
  wire \$247 ;
  wire [22:0] \$249 ;
  wire \$25 ;
  wire [22:0] \$250 ;
  wire [23:0] \$252 ;
  wire [22:0] \$253 ;
  wire [23:0] \$255 ;
  wire \$257 ;
  wire \$259 ;
  wire \$261 ;
  wire \$263 ;
  wire \$265 ;
  wire \$267 ;
  wire \$269 ;
  wire \$27 ;
  wire \$271 ;
  wire [2:0] \$273 ;
  wire [2:0] \$274 ;
  wire \$276 ;
  wire \$278 ;
  wire [8:0] \$280 ;
  wire [8:0] \$281 ;
  wire \$283 ;
  wire \$29 ;
  wire \$3 ;
  wire \$31 ;
  wire \$33 ;
  wire \$35 ;
  wire \$37 ;
  wire \$39 ;
  wire \$41 ;
  wire \$43 ;
  wire \$45 ;
  wire \$47 ;
  wire \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire [7:0] \$53 ;
  wire \$55 ;
  wire \$57 ;
  wire \$59 ;
  wire \$61 ;
  wire \$64 ;
  wire \$66 ;
  wire \$68 ;
  wire \$7 ;
  wire \$70 ;
  wire \$73 ;
  wire \$75 ;
  wire \$77 ;
  wire \$79 ;
  wire \$82 ;
  wire \$84 ;
  wire \$86 ;
  wire \$88 ;
  wire \$9 ;
  wire \$91 ;
  wire \$93 ;
  wire \$95 ;
  wire \$97 ;
  reg \$signal  = 1'h0;
  reg \$signal$108  = 1'h0;
  reg \$signal$108$next ;
  reg \$signal$117  = 1'h0;
  reg \$signal$117$next ;
  reg \$signal$63  = 1'h0;
  reg \$signal$63$next ;
  reg \$signal$72  = 1'h0;
  reg \$signal$72$next ;
  reg \$signal$81  = 1'h0;
  reg \$signal$81$next ;
  reg \$signal$90  = 1'h0;
  reg \$signal$90$next ;
  reg \$signal$99  = 1'h0;
  reg \$signal$99$next ;
  reg \$signal$next ;
  reg [159:0] active_state = 160'h0000000000000000000100000000000000000000;
  reg [159:0] \active_state$next ;
  reg [21:0] audgen_accum = 22'h0b5464;
  reg [21:0] \audgen_accum$next ;
  reg audgen_bit_update_stb;
  wire [3:0] audgen_channel_internal;
  wire audgen_channel_select;
  reg audgen_dac = 1'h0;
  reg \audgen_dac$next ;
  wire audgen_lrck;
  reg [7:0] audgen_lrck_count = 8'h00;
  reg [7:0] \audgen_lrck_count$next ;
  wire [4:0] audgen_lrck_internal;
  reg audgen_mclk = 1'h0;
  reg \audgen_mclk$next ;
  wire audgen_mclk_stb;
  wire audgen_silenced;
  wire audgen_slck;
  reg [1:0] audgen_slck_count = 2'h3;
  reg [1:0] \audgen_slck_count$next ;
  reg audgen_slck_update = 1'h1;
  reg \audgen_slck_update$next ;
  reg [159:0] audgen_state = 160'h0000000000000000000100000000000000000000;
  reg [159:0] \audgen_state$next ;
  reg audgen_word_update_stb;
  input audio_adc;
  wire audio_adc;
  output audio_dac;
  wire audio_dac;
  reg [1:0] audio_divide_counter = 2'h3;
  reg [1:0] \audio_divide_counter$next ;
  wire audio_divide_stb;
  wire audio_high;
  output audio_lrck;
  wire audio_lrck;
  output audio_mclk;
  wire audio_mclk;
  wire audio_output_word_bit;
  reg [1:0] automata_next = 2'h0;
  reg [1:0] \automata_next$next ;
  reg [7:0] automata_table = 8'h1e;
  reg [7:0] \automata_table$next ;
  wire boot_clk;
  input clk;
  wire clk;
  wire \clk$1 ;
  input [31:0] cont1_joy;
  wire [31:0] cont1_joy;
  input [31:0] cont1_key;
  wire [31:0] cont1_key;
  reg [31:0] cont1_key_last = 32'd0;
  reg [31:0] \cont1_key_last$next ;
  input [15:0] cont1_trig;
  wire [15:0] cont1_trig;
  input [31:0] cont2_joy;
  wire [31:0] cont2_joy;
  input [31:0] cont2_key;
  wire [31:0] cont2_key;
  input [15:0] cont2_trig;
  wire [15:0] cont2_trig;
  input [31:0] cont3_joy;
  wire [31:0] cont3_joy;
  input [31:0] cont3_key;
  wire [31:0] cont3_key;
  input [15:0] cont3_trig;
  wire [15:0] cont3_trig;
  input [31:0] cont4_joy;
  wire [31:0] cont4_joy;
  input [31:0] cont4_key;
  wire [31:0] cont4_key;
  input [15:0] cont4_trig;
  wire [15:0] cont4_trig;
  input dbg_rx;
  wire dbg_rx;
  input dbg_tx;
  wire dbg_tx;
  reg [23:0] flash_color;
  reg frame_frozen = 1'h1;
  reg \frame_frozen$next ;
  wire hold;
  wire \hold$134 ;
  wire \hold$145 ;
  wire \hold$156 ;
  output init_done;
  reg init_done = 1'h0;
  wire \init_done$next ;
  wire l_press;
  reg need_automata_next = 1'h0;
  reg \need_automata_next$next ;
  reg need_frozen_exception = 1'h0;
  reg \need_frozen_exception$next ;
  reg need_topline_backcopy = 1'h0;
  reg \need_topline_backcopy$next ;
  reg need_topline_copy = 1'h0;
  reg \need_topline_copy$next ;
  reg [5:0] opening_countdown_timer = 6'h3f;
  reg [5:0] \opening_countdown_timer$next ;
  reg opening_countdown_timer_late_reset = 1'h0;
  reg \opening_countdown_timer_late_reset$next ;
  wire opening_wants_frozen;
  reg pause_key_wants_frozen = 1'h0;
  reg \pause_key_wants_frozen$next ;
  wire press;
  wire \press$135 ;
  wire \press$146 ;
  wire \press$157 ;
  wire r_press;
  wire \release ;
  wire \release$140 ;
  wire \release$151 ;
  wire \release$162 ;
  input rst;
  wire rst;
  wire \rst$2 ;
  reg scribble_now;
  reg \scribble_now$200 ;
  reg \scribble_now$201 ;
  reg \scribble_now$202 ;
  wire select;
  reg [7:0] speed_counter = 8'h00;
  reg [7:0] \speed_counter$next ;
  reg [7:0] speed_counter_mask = 8'h01;
  reg [7:0] \speed_counter_mask$next ;
  reg [159:0] topline_state = 160'h0000000000000000000100000000000000000000;
  reg [159:0] \topline_state$next ;
  input user1;
  wire user1;
  input user2;
  wire user2;
  wire video_active;
  wire video_clk_div_clk;
  wire video_clk_div_clk90;
  wire video_clk_div_stb;
  output video_de;
  reg video_de = 1'h0;
  reg \video_de$next ;
  output video_hs;
  reg video_hs = 1'h0;
  reg \video_hs$next ;
  wire video_hsync_stb;
  output [23:0] video_rgb;
  reg [23:0] video_rgb = 24'h000000;
  reg [23:0] \video_rgb$next ;
  output video_rgb_clk;
  wire video_rgb_clk;
  output video_rgb_clk90;
  wire video_rgb_clk90;
  input video_skip;
  wire video_skip;
  output video_vs;
  reg video_vs = 1'h0;
  reg \video_vs$next ;
  wire video_vsync_stb;
  reg [9:0] video_x_count = 10'h000;
  reg [9:0] \video_x_count$next ;
  reg [9:0] video_y_count = 10'h000;
  reg [9:0] \video_y_count$next ;
  assign \$9  = video_clk_div_stb & \$7 ;
  assign \$100  = ~ cont1_key_last[5];
  assign \$102  = cont1_key[5] & \$100 ;
  assign \$104  = ~ cont1_key[5];
  assign \$106  = cont1_key_last[5] & \$104 ;
  assign \$109  = ~ cont1_key_last[4];
  assign \$111  = cont1_key[4] & \$109 ;
  assign \$113  = ~ cont1_key[4];
  assign \$115  = cont1_key_last[4] & \$113 ;
  assign \$118  = ~ cont1_key_last[4];
  assign \$11  = video_y_count == 7'h69;
  assign \$120  = cont1_key[4] & \$118 ;
  assign \$122  = ~ cont1_key[4];
  assign \$124  = cont1_key_last[4] & \$122 ;
  assign \$126  = ~ cont1_key_last[0];
  assign \$128  = hold & \$126 ;
  assign \$130  = ~ hold;
  assign \$132  = \$130  & cont1_key_last[0];
  assign \$136  = ~ cont1_key_last[2];
  assign \$138  = \hold$134  & \$136 ;
  assign \$13  = \$9  & \$11 ;
  assign \$141  = ~ \hold$134 ;
  assign \$143  = \$141  & cont1_key_last[2];
  assign \$147  = ~ cont1_key_last[3];
  assign \$149  = \hold$145  & \$147 ;
  assign \$152  = ~ \hold$145 ;
  assign \$154  = \$152  & cont1_key_last[3];
  assign \$158  = ~ cont1_key_last[1];
  assign \$15  = video_x_count >= 3'h4;
  assign \$160  = \hold$156  & \$158 ;
  assign \$163  = ~ \hold$156 ;
  assign \$165  = \$163  & cont1_key_last[1];
  assign \$167  = | opening_countdown_timer;
  assign \$169  = video_y_count >= 5'h10;
  assign \$171  = video_hsync_stb & \$169 ;
  assign \$173  = video_y_count < 7'h69;
  assign \$175  = \$171  & \$173 ;
  assign \$177  = video_y_count == 5'h10;
  assign \$17  = video_x_count < 8'ha4;
  assign \$179  = ~ frame_frozen;
  assign \$181  = \$177  & \$179 ;
  assign \$183  = video_y_count >= 5'h10;
  assign \$185  = video_hsync_stb & \$183 ;
  assign \$187  = video_y_count < 7'h69;
  assign \$189  = \$185  & \$187 ;
  assign \$192  = speed_counter + 1'h1;
  assign \$194  = speed_counter & speed_counter_mask;
  assign \$196  = ! \$194 ;
  assign \$198  = opening_wants_frozen | pause_key_wants_frozen;
  assign \$19  = \$15  & \$17 ;
  assign \$203  = | opening_countdown_timer;
  assign \$206  = opening_countdown_timer - 1'h1;
  assign \$208  = ~ frame_frozen;
  assign \$211  = video_clk_div_stb & video_vsync_stb;
  assign \$210  = ~ \$211 ;
  assign \$214  = audgen_channel_internal <= 3'h5;
  assign \$216  = ! audio_divide_counter;
  assign \$218  = audio_output_word_bit ^ audio_high;
  assign \$21  = video_y_count >= 5'h10;
  assign \$220  = audgen_silenced ? 1'h0 : \$218 ;
  assign \$223  = video_clk_div_stb & video_vsync_stb;
  assign \$222  = ~ \$223 ;
  assign \$227  = audio_divide_counter + 1'h1;
  assign \$229  = ! video_x_count;
  assign \$231  = ! video_y_count;
  assign \$233  = \$229  & \$231 ;
  assign \$235  = video_x_count == 2'h3;
  assign \$238  = video_x_count + 1'h1;
  assign \$23  = \$19  & \$21 ;
  assign \$240  = video_x_count == 8'ha7;
  assign \$242  = video_x_count == 8'ha7;
  assign \$245  = video_y_count + 1'h1;
  assign \$247  = video_y_count == 7'h7a;
  assign \$250  = audgen_accum + 22'h03c000;
  assign \$253  = audgen_accum - 22'h0b5464;
  assign \$255  = $signed(\$253 ) + $signed(23'h03c000);
  assign \$257  = audgen_accum >= 22'h0b5464;
  assign \$25  = video_y_count < 7'h6a;
  assign \$259  = ~ audgen_mclk;
  assign \$261  = ~ audgen_slck_count[1];
  assign \$263  = ~ audgen_mclk;
  assign \$265  = audgen_mclk_stb & \$263 ;
  assign \$267  = audgen_slck_count == 2'h2;
  assign \$269  = ~ audgen_mclk;
  assign \$271  = audgen_mclk_stb & \$269 ;
  assign \$274  = audgen_slck_count + 1'h1;
  assign \$276  = ~ audgen_mclk;
  assign \$278  = audgen_mclk_stb & \$276 ;
  assign \$27  = \$23  & \$25 ;
  assign \$281  = audgen_lrck_count + 1'h1;
  assign \$283  = audgen_lrck_internal == 5'h17;
  always @(posedge boot_clk)
    init_done <= 1'h1;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) cont1_key_last <= 32'd0;
    else cont1_key_last <= \cont1_key_last$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) need_frozen_exception <= 1'h0;
    else need_frozen_exception <= \need_frozen_exception$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) opening_countdown_timer_late_reset <= 1'h0;
    else opening_countdown_timer_late_reset <= \opening_countdown_timer_late_reset$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) pause_key_wants_frozen <= 1'h0;
    else pause_key_wants_frozen <= \pause_key_wants_frozen$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) speed_counter_mask <= 8'h01;
    else speed_counter_mask <= \speed_counter_mask$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) \$signal  <= 1'h0;
    else \$signal  <= \$signal$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) \$signal$63  <= 1'h0;
    else \$signal$63  <= \$signal$63$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) \$signal$72  <= 1'h0;
    else \$signal$72  <= \$signal$72$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) \$signal$81  <= 1'h0;
    else \$signal$81  <= \$signal$81$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) \$signal$90  <= 1'h0;
    else \$signal$90  <= \$signal$90$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) \$signal$99  <= 1'h0;
    else \$signal$99  <= \$signal$99$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) \$signal$108  <= 1'h0;
    else \$signal$108  <= \$signal$108$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) \$signal$117  <= 1'h0;
    else \$signal$117  <= \$signal$117$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) automata_next <= 2'h0;
    else automata_next <= \automata_next$next ;
  assign \$29  = ~ cont1_key_last[15];
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) need_automata_next <= 1'h0;
    else need_automata_next <= \need_automata_next$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) need_topline_backcopy <= 1'h0;
    else need_topline_backcopy <= \need_topline_backcopy$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) video_rgb <= 24'h000000;
    else video_rgb <= \video_rgb$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) active_state <= 160'h0000000000000000000100000000000000000000;
    else active_state <= \active_state$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) speed_counter <= 8'h00;
    else speed_counter <= \speed_counter$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) frame_frozen <= 1'h1;
    else frame_frozen <= \frame_frozen$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) topline_state <= 160'h0000000000000000000100000000000000000000;
    else topline_state <= \topline_state$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) automata_table <= 8'h1e;
    else automata_table <= \automata_table$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) need_topline_copy <= 1'h0;
    else need_topline_copy <= \need_topline_copy$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) opening_countdown_timer <= 6'h3f;
    else opening_countdown_timer <= \opening_countdown_timer$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) audgen_state <= 160'h0000000000000000000100000000000000000000;
    else audgen_state <= \audgen_state$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) audgen_dac <= 1'h0;
    else audgen_dac <= \audgen_dac$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) audio_divide_counter <= 2'h3;
    else audio_divide_counter <= \audio_divide_counter$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) video_vs <= 1'h0;
    else video_vs <= \video_vs$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) video_hs <= 1'h0;
    else video_hs <= \video_hs$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) video_x_count <= 10'h000;
    else video_x_count <= \video_x_count$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) video_y_count <= 10'h000;
    else video_y_count <= \video_y_count$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) video_de <= 1'h0;
    else video_de <= \video_de$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) audgen_accum <= 22'h0b5464;
    else audgen_accum <= \audgen_accum$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) audgen_mclk <= 1'h0;
    else audgen_mclk <= \audgen_mclk$next ;
  assign \$31  = cont1_key[15] & \$29 ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) audgen_slck_update <= 1'h1;
    else audgen_slck_update <= \audgen_slck_update$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) audgen_slck_count <= 2'h3;
    else audgen_slck_count <= \audgen_slck_count$next ;
  always @(posedge \clk$1 , posedge \rst$2 )
    if (\rst$2 ) audgen_lrck_count <= 8'h00;
    else audgen_lrck_count <= \audgen_lrck_count$next ;
  assign \$33  = ~ cont1_key_last[15];
  assign \$35  = cont1_key[15] & \$33 ;
  assign \$37  = ~ cont1_key_last[15];
  assign \$3  = video_x_count == 8'ha4;
  assign \$39  = cont1_key[15] & \$37 ;
  assign \$41  = ~ pause_key_wants_frozen;
  assign \$43  = ~ cont1_key_last[8];
  assign \$45  = cont1_key[8] & \$43 ;
  assign \$47  = ~ cont1_key_last[9];
  assign \$49  = cont1_key[9] & \$47 ;
  assign \$51  = l_press & r_press;
  assign \$53  = + speed_counter_mask[7:1];
  assign \$55  = ~ cont1_key_last[7];
  assign \$57  = cont1_key[7] & \$55 ;
  assign \$5  = video_clk_div_stb & \$3 ;
  assign \$59  = ~ cont1_key[7];
  assign \$61  = cont1_key_last[7] & \$59 ;
  assign \$64  = ~ cont1_key_last[7];
  assign \$66  = cont1_key[7] & \$64 ;
  assign \$68  = ~ cont1_key[7];
  assign \$70  = cont1_key_last[7] & \$68 ;
  assign \$73  = ~ cont1_key_last[6];
  assign \$75  = cont1_key[6] & \$73 ;
  assign \$77  = ~ cont1_key[6];
  assign \$7  = video_x_count == 8'ha5;
  assign \$79  = cont1_key_last[6] & \$77 ;
  assign \$82  = ~ cont1_key_last[6];
  assign \$84  = cont1_key[6] & \$82 ;
  assign \$86  = ~ cont1_key[6];
  assign \$88  = cont1_key_last[6] & \$86 ;
  assign \$91  = ~ cont1_key_last[5];
  assign \$93  = cont1_key[5] & \$91 ;
  assign \$95  = ~ cont1_key[5];
  assign \$97  = cont1_key_last[5] & \$95 ;
  \amaranth_core.video_clk_div  video_clk_div (
    .clk(\clk$1 ),
    .\clk$1 (video_clk_div_clk),
    .clk90(video_clk_div_clk90),
    .rst(\rst$2 ),
    .stb(video_clk_div_stb)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \need_frozen_exception$next  = need_frozen_exception;
    casez (\$31 )
      1'h1:
          casez (select)
            1'h1:
                (* full_case = 32'd1 *)
                casez (pause_key_wants_frozen)
                  1'h1:
                      \need_frozen_exception$next  = 1'h1;
                  default:
                      \need_frozen_exception$next  = 1'h1;
                endcase
          endcase
    endcase
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (need_frozen_exception)
                  1'h1:
                      \need_frozen_exception$next  = 1'h0;
                endcase
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \need_frozen_exception$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \opening_countdown_timer_late_reset$next  = opening_countdown_timer_late_reset;
    casez (\$35 )
      1'h1:
          casez (select)
            1'h1:
                (* full_case = 32'd1 *)
                casez (pause_key_wants_frozen)
                  1'h1:
                      /* empty */;
                  default:
                      \opening_countdown_timer_late_reset$next  = 1'h1;
                endcase
          endcase
    endcase
    casez (opening_countdown_timer_late_reset)
      1'h1:
          \opening_countdown_timer_late_reset$next  = 1'h0;
    endcase
    casez (\rst$2 )
      1'h1:
          \opening_countdown_timer_late_reset$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \pause_key_wants_frozen$next  = pause_key_wants_frozen;
    casez (\$39 )
      1'h1:
          (* full_case = 32'd1 *)
          casez (select)
            1'h1:
                /* empty */;
            default:
                \pause_key_wants_frozen$next  = \$41 ;
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \pause_key_wants_frozen$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \speed_counter_mask$next  = speed_counter_mask;
    casez ({ r_press, l_press, \$51  })
      3'b??1:
          /* empty */;
      3'b?1?:
        begin
          \speed_counter_mask$next [7:1] = speed_counter_mask[6:0];
          \speed_counter_mask$next [0] = 1'h1;
        end
      3'b1??:
          \speed_counter_mask$next  = \$53 ;
    endcase
    casez (\rst$2 )
      1'h1:
          \speed_counter_mask$next  = 8'h01;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \$signal$next  = \$signal ;
    casez ({ \$61 , \$57  })
      2'b?1:
          casez (select)
            1'h1:
                \$signal$next  = 1'h1;
          endcase
    endcase
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (\$signal )
                  1'h1:
                      \$signal$next  = 1'h0;
                endcase
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \$signal$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \$signal$63$next  = \$signal$63 ;
    casez ({ \$70 , \$66  })
      2'b?1:
          (* full_case = 32'd1 *)
          casez (select)
            1'h1:
                /* empty */;
            default:
                \$signal$63$next  = 1'h1;
          endcase
      2'b1?:
          \$signal$63$next  = 1'h0;
    endcase
    casez (\rst$2 )
      1'h1:
          \$signal$63$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \$signal$72$next  = \$signal$72 ;
    casez ({ \$79 , \$75  })
      2'b?1:
          casez (select)
            1'h1:
                \$signal$72$next  = 1'h1;
          endcase
    endcase
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (\$signal$72 )
                  1'h1:
                      \$signal$72$next  = 1'h0;
                endcase
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \$signal$72$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \$signal$81$next  = \$signal$81 ;
    casez ({ \$88 , \$84  })
      2'b?1:
          (* full_case = 32'd1 *)
          casez (select)
            1'h1:
                /* empty */;
            default:
                \$signal$81$next  = 1'h1;
          endcase
      2'b1?:
          \$signal$81$next  = 1'h0;
    endcase
    casez (\rst$2 )
      1'h1:
          \$signal$81$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \$signal$90$next  = \$signal$90 ;
    casez ({ \$97 , \$93  })
      2'b?1:
          casez (select)
            1'h1:
                \$signal$90$next  = 1'h1;
          endcase
    endcase
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (\$signal$90 )
                  1'h1:
                      \$signal$90$next  = 1'h0;
                endcase
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \$signal$90$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \$signal$99$next  = \$signal$99 ;
    casez ({ \$106 , \$102  })
      2'b?1:
          (* full_case = 32'd1 *)
          casez (select)
            1'h1:
                /* empty */;
            default:
                \$signal$99$next  = 1'h1;
          endcase
      2'b1?:
          \$signal$99$next  = 1'h0;
    endcase
    casez (\rst$2 )
      1'h1:
          \$signal$99$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \$signal$108$next  = \$signal$108 ;
    casez ({ \$115 , \$111  })
      2'b?1:
          casez (select)
            1'h1:
                \$signal$108$next  = 1'h1;
          endcase
    endcase
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (\$signal$108 )
                  1'h1:
                      \$signal$108$next  = 1'h0;
                endcase
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \$signal$108$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \$signal$117$next  = \$signal$117 ;
    casez ({ \$124 , \$120  })
      2'b?1:
          (* full_case = 32'd1 *)
          casez (select)
            1'h1:
                /* empty */;
            default:
                \$signal$117$next  = 1'h1;
          endcase
      2'b1?:
          \$signal$117$next  = 1'h0;
    endcase
    casez (\rst$2 )
      1'h1:
          \$signal$117$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \automata_next$next  = automata_next;
    casez ({ \press$157 , \press$146 , \press$135 , press, 1'h0 })
      5'b???1?:
          \automata_next$next  = 2'h0;
      5'b??1??:
          \automata_next$next  = 2'h1;
      5'b?1???:
          \automata_next$next  = 2'h2;
      5'h1?:
          \automata_next$next  = 2'h3;
    endcase
    casez (\rst$2 )
      1'h1:
          \automata_next$next  = 2'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \need_automata_next$next  = need_automata_next;
    casez ({ \press$157 , \press$146 , \press$135 , press, 1'h0 })
      5'b???1?:
          \need_automata_next$next  = 1'h1;
      5'b??1??:
          \need_automata_next$next  = 1'h1;
      5'b?1???:
          \need_automata_next$next  = 1'h1;
      5'h1?:
          \need_automata_next$next  = 1'h1;
    endcase
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (need_automata_next)
                  1'h1:
                      \need_automata_next$next  = 1'h0;
                endcase
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \need_automata_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (active_state[0])
      1'h1:
          flash_color = 24'h000000;
      default:
          flash_color = 24'hffffff;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \need_topline_backcopy$next  = 1'h0;
    casez (video_clk_div_stb)
      1'h1:
          casez (\$175 )
            1'h1:
                casez (\$181 )
                  1'h1:
                      \need_topline_backcopy$next  = 1'h1;
                endcase
          endcase
    endcase
    casez (need_topline_backcopy)
      1'h1:
          \need_topline_backcopy$next  = 1'h0;
    endcase
    casez (\rst$2 )
      1'h1:
          \need_topline_backcopy$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \video_rgb$next  = video_rgb;
    casez (video_clk_div_stb)
      1'h1:
        begin
          \video_rgb$next  = 24'h000000;
          casez (video_active)
            1'h1:
                \video_rgb$next  = flash_color;
          endcase
        end
    endcase
    casez (\rst$2 )
      1'h1:
          \video_rgb$next  = 24'h000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \active_state$next  = active_state;
    casez (video_clk_div_stb)
      1'h1:
        begin
          casez (video_active)
            1'h1:
                \active_state$next  = { active_state[0], active_state[159:1] };
          endcase
          casez (\$189 )
            1'h1:
              begin
                (* full_case = 32'd1 *)
                casez ({ active_state[1:0], active_state[159] })
                  3'h0:
                      \active_state$next [0] = automata_table[0];
                  3'h1:
                      \active_state$next [0] = automata_table[1];
                  3'h2:
                      \active_state$next [0] = automata_table[2];
                  3'h3:
                      \active_state$next [0] = automata_table[3];
                  3'h4:
                      \active_state$next [0] = automata_table[4];
                  3'h5:
                      \active_state$next [0] = automata_table[5];
                  3'h6:
                      \active_state$next [0] = automata_table[6];
                  3'h7:
                      \active_state$next [0] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[2:0])
                  3'h0:
                      \active_state$next [1] = automata_table[0];
                  3'h1:
                      \active_state$next [1] = automata_table[1];
                  3'h2:
                      \active_state$next [1] = automata_table[2];
                  3'h3:
                      \active_state$next [1] = automata_table[3];
                  3'h4:
                      \active_state$next [1] = automata_table[4];
                  3'h5:
                      \active_state$next [1] = automata_table[5];
                  3'h6:
                      \active_state$next [1] = automata_table[6];
                  3'h7:
                      \active_state$next [1] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[3:1])
                  3'h0:
                      \active_state$next [2] = automata_table[0];
                  3'h1:
                      \active_state$next [2] = automata_table[1];
                  3'h2:
                      \active_state$next [2] = automata_table[2];
                  3'h3:
                      \active_state$next [2] = automata_table[3];
                  3'h4:
                      \active_state$next [2] = automata_table[4];
                  3'h5:
                      \active_state$next [2] = automata_table[5];
                  3'h6:
                      \active_state$next [2] = automata_table[6];
                  3'h7:
                      \active_state$next [2] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[4:2])
                  3'h0:
                      \active_state$next [3] = automata_table[0];
                  3'h1:
                      \active_state$next [3] = automata_table[1];
                  3'h2:
                      \active_state$next [3] = automata_table[2];
                  3'h3:
                      \active_state$next [3] = automata_table[3];
                  3'h4:
                      \active_state$next [3] = automata_table[4];
                  3'h5:
                      \active_state$next [3] = automata_table[5];
                  3'h6:
                      \active_state$next [3] = automata_table[6];
                  3'h7:
                      \active_state$next [3] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[5:3])
                  3'h0:
                      \active_state$next [4] = automata_table[0];
                  3'h1:
                      \active_state$next [4] = automata_table[1];
                  3'h2:
                      \active_state$next [4] = automata_table[2];
                  3'h3:
                      \active_state$next [4] = automata_table[3];
                  3'h4:
                      \active_state$next [4] = automata_table[4];
                  3'h5:
                      \active_state$next [4] = automata_table[5];
                  3'h6:
                      \active_state$next [4] = automata_table[6];
                  3'h7:
                      \active_state$next [4] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[6:4])
                  3'h0:
                      \active_state$next [5] = automata_table[0];
                  3'h1:
                      \active_state$next [5] = automata_table[1];
                  3'h2:
                      \active_state$next [5] = automata_table[2];
                  3'h3:
                      \active_state$next [5] = automata_table[3];
                  3'h4:
                      \active_state$next [5] = automata_table[4];
                  3'h5:
                      \active_state$next [5] = automata_table[5];
                  3'h6:
                      \active_state$next [5] = automata_table[6];
                  3'h7:
                      \active_state$next [5] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[7:5])
                  3'h0:
                      \active_state$next [6] = automata_table[0];
                  3'h1:
                      \active_state$next [6] = automata_table[1];
                  3'h2:
                      \active_state$next [6] = automata_table[2];
                  3'h3:
                      \active_state$next [6] = automata_table[3];
                  3'h4:
                      \active_state$next [6] = automata_table[4];
                  3'h5:
                      \active_state$next [6] = automata_table[5];
                  3'h6:
                      \active_state$next [6] = automata_table[6];
                  3'h7:
                      \active_state$next [6] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[8:6])
                  3'h0:
                      \active_state$next [7] = automata_table[0];
                  3'h1:
                      \active_state$next [7] = automata_table[1];
                  3'h2:
                      \active_state$next [7] = automata_table[2];
                  3'h3:
                      \active_state$next [7] = automata_table[3];
                  3'h4:
                      \active_state$next [7] = automata_table[4];
                  3'h5:
                      \active_state$next [7] = automata_table[5];
                  3'h6:
                      \active_state$next [7] = automata_table[6];
                  3'h7:
                      \active_state$next [7] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[9:7])
                  3'h0:
                      \active_state$next [8] = automata_table[0];
                  3'h1:
                      \active_state$next [8] = automata_table[1];
                  3'h2:
                      \active_state$next [8] = automata_table[2];
                  3'h3:
                      \active_state$next [8] = automata_table[3];
                  3'h4:
                      \active_state$next [8] = automata_table[4];
                  3'h5:
                      \active_state$next [8] = automata_table[5];
                  3'h6:
                      \active_state$next [8] = automata_table[6];
                  3'h7:
                      \active_state$next [8] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[10:8])
                  3'h0:
                      \active_state$next [9] = automata_table[0];
                  3'h1:
                      \active_state$next [9] = automata_table[1];
                  3'h2:
                      \active_state$next [9] = automata_table[2];
                  3'h3:
                      \active_state$next [9] = automata_table[3];
                  3'h4:
                      \active_state$next [9] = automata_table[4];
                  3'h5:
                      \active_state$next [9] = automata_table[5];
                  3'h6:
                      \active_state$next [9] = automata_table[6];
                  3'h7:
                      \active_state$next [9] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[11:9])
                  3'h0:
                      \active_state$next [10] = automata_table[0];
                  3'h1:
                      \active_state$next [10] = automata_table[1];
                  3'h2:
                      \active_state$next [10] = automata_table[2];
                  3'h3:
                      \active_state$next [10] = automata_table[3];
                  3'h4:
                      \active_state$next [10] = automata_table[4];
                  3'h5:
                      \active_state$next [10] = automata_table[5];
                  3'h6:
                      \active_state$next [10] = automata_table[6];
                  3'h7:
                      \active_state$next [10] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[12:10])
                  3'h0:
                      \active_state$next [11] = automata_table[0];
                  3'h1:
                      \active_state$next [11] = automata_table[1];
                  3'h2:
                      \active_state$next [11] = automata_table[2];
                  3'h3:
                      \active_state$next [11] = automata_table[3];
                  3'h4:
                      \active_state$next [11] = automata_table[4];
                  3'h5:
                      \active_state$next [11] = automata_table[5];
                  3'h6:
                      \active_state$next [11] = automata_table[6];
                  3'h7:
                      \active_state$next [11] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[13:11])
                  3'h0:
                      \active_state$next [12] = automata_table[0];
                  3'h1:
                      \active_state$next [12] = automata_table[1];
                  3'h2:
                      \active_state$next [12] = automata_table[2];
                  3'h3:
                      \active_state$next [12] = automata_table[3];
                  3'h4:
                      \active_state$next [12] = automata_table[4];
                  3'h5:
                      \active_state$next [12] = automata_table[5];
                  3'h6:
                      \active_state$next [12] = automata_table[6];
                  3'h7:
                      \active_state$next [12] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[14:12])
                  3'h0:
                      \active_state$next [13] = automata_table[0];
                  3'h1:
                      \active_state$next [13] = automata_table[1];
                  3'h2:
                      \active_state$next [13] = automata_table[2];
                  3'h3:
                      \active_state$next [13] = automata_table[3];
                  3'h4:
                      \active_state$next [13] = automata_table[4];
                  3'h5:
                      \active_state$next [13] = automata_table[5];
                  3'h6:
                      \active_state$next [13] = automata_table[6];
                  3'h7:
                      \active_state$next [13] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[15:13])
                  3'h0:
                      \active_state$next [14] = automata_table[0];
                  3'h1:
                      \active_state$next [14] = automata_table[1];
                  3'h2:
                      \active_state$next [14] = automata_table[2];
                  3'h3:
                      \active_state$next [14] = automata_table[3];
                  3'h4:
                      \active_state$next [14] = automata_table[4];
                  3'h5:
                      \active_state$next [14] = automata_table[5];
                  3'h6:
                      \active_state$next [14] = automata_table[6];
                  3'h7:
                      \active_state$next [14] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[16:14])
                  3'h0:
                      \active_state$next [15] = automata_table[0];
                  3'h1:
                      \active_state$next [15] = automata_table[1];
                  3'h2:
                      \active_state$next [15] = automata_table[2];
                  3'h3:
                      \active_state$next [15] = automata_table[3];
                  3'h4:
                      \active_state$next [15] = automata_table[4];
                  3'h5:
                      \active_state$next [15] = automata_table[5];
                  3'h6:
                      \active_state$next [15] = automata_table[6];
                  3'h7:
                      \active_state$next [15] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[17:15])
                  3'h0:
                      \active_state$next [16] = automata_table[0];
                  3'h1:
                      \active_state$next [16] = automata_table[1];
                  3'h2:
                      \active_state$next [16] = automata_table[2];
                  3'h3:
                      \active_state$next [16] = automata_table[3];
                  3'h4:
                      \active_state$next [16] = automata_table[4];
                  3'h5:
                      \active_state$next [16] = automata_table[5];
                  3'h6:
                      \active_state$next [16] = automata_table[6];
                  3'h7:
                      \active_state$next [16] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[18:16])
                  3'h0:
                      \active_state$next [17] = automata_table[0];
                  3'h1:
                      \active_state$next [17] = automata_table[1];
                  3'h2:
                      \active_state$next [17] = automata_table[2];
                  3'h3:
                      \active_state$next [17] = automata_table[3];
                  3'h4:
                      \active_state$next [17] = automata_table[4];
                  3'h5:
                      \active_state$next [17] = automata_table[5];
                  3'h6:
                      \active_state$next [17] = automata_table[6];
                  3'h7:
                      \active_state$next [17] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[19:17])
                  3'h0:
                      \active_state$next [18] = automata_table[0];
                  3'h1:
                      \active_state$next [18] = automata_table[1];
                  3'h2:
                      \active_state$next [18] = automata_table[2];
                  3'h3:
                      \active_state$next [18] = automata_table[3];
                  3'h4:
                      \active_state$next [18] = automata_table[4];
                  3'h5:
                      \active_state$next [18] = automata_table[5];
                  3'h6:
                      \active_state$next [18] = automata_table[6];
                  3'h7:
                      \active_state$next [18] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[20:18])
                  3'h0:
                      \active_state$next [19] = automata_table[0];
                  3'h1:
                      \active_state$next [19] = automata_table[1];
                  3'h2:
                      \active_state$next [19] = automata_table[2];
                  3'h3:
                      \active_state$next [19] = automata_table[3];
                  3'h4:
                      \active_state$next [19] = automata_table[4];
                  3'h5:
                      \active_state$next [19] = automata_table[5];
                  3'h6:
                      \active_state$next [19] = automata_table[6];
                  3'h7:
                      \active_state$next [19] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[21:19])
                  3'h0:
                      \active_state$next [20] = automata_table[0];
                  3'h1:
                      \active_state$next [20] = automata_table[1];
                  3'h2:
                      \active_state$next [20] = automata_table[2];
                  3'h3:
                      \active_state$next [20] = automata_table[3];
                  3'h4:
                      \active_state$next [20] = automata_table[4];
                  3'h5:
                      \active_state$next [20] = automata_table[5];
                  3'h6:
                      \active_state$next [20] = automata_table[6];
                  3'h7:
                      \active_state$next [20] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[22:20])
                  3'h0:
                      \active_state$next [21] = automata_table[0];
                  3'h1:
                      \active_state$next [21] = automata_table[1];
                  3'h2:
                      \active_state$next [21] = automata_table[2];
                  3'h3:
                      \active_state$next [21] = automata_table[3];
                  3'h4:
                      \active_state$next [21] = automata_table[4];
                  3'h5:
                      \active_state$next [21] = automata_table[5];
                  3'h6:
                      \active_state$next [21] = automata_table[6];
                  3'h7:
                      \active_state$next [21] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[23:21])
                  3'h0:
                      \active_state$next [22] = automata_table[0];
                  3'h1:
                      \active_state$next [22] = automata_table[1];
                  3'h2:
                      \active_state$next [22] = automata_table[2];
                  3'h3:
                      \active_state$next [22] = automata_table[3];
                  3'h4:
                      \active_state$next [22] = automata_table[4];
                  3'h5:
                      \active_state$next [22] = automata_table[5];
                  3'h6:
                      \active_state$next [22] = automata_table[6];
                  3'h7:
                      \active_state$next [22] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[24:22])
                  3'h0:
                      \active_state$next [23] = automata_table[0];
                  3'h1:
                      \active_state$next [23] = automata_table[1];
                  3'h2:
                      \active_state$next [23] = automata_table[2];
                  3'h3:
                      \active_state$next [23] = automata_table[3];
                  3'h4:
                      \active_state$next [23] = automata_table[4];
                  3'h5:
                      \active_state$next [23] = automata_table[5];
                  3'h6:
                      \active_state$next [23] = automata_table[6];
                  3'h7:
                      \active_state$next [23] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[25:23])
                  3'h0:
                      \active_state$next [24] = automata_table[0];
                  3'h1:
                      \active_state$next [24] = automata_table[1];
                  3'h2:
                      \active_state$next [24] = automata_table[2];
                  3'h3:
                      \active_state$next [24] = automata_table[3];
                  3'h4:
                      \active_state$next [24] = automata_table[4];
                  3'h5:
                      \active_state$next [24] = automata_table[5];
                  3'h6:
                      \active_state$next [24] = automata_table[6];
                  3'h7:
                      \active_state$next [24] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[26:24])
                  3'h0:
                      \active_state$next [25] = automata_table[0];
                  3'h1:
                      \active_state$next [25] = automata_table[1];
                  3'h2:
                      \active_state$next [25] = automata_table[2];
                  3'h3:
                      \active_state$next [25] = automata_table[3];
                  3'h4:
                      \active_state$next [25] = automata_table[4];
                  3'h5:
                      \active_state$next [25] = automata_table[5];
                  3'h6:
                      \active_state$next [25] = automata_table[6];
                  3'h7:
                      \active_state$next [25] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[27:25])
                  3'h0:
                      \active_state$next [26] = automata_table[0];
                  3'h1:
                      \active_state$next [26] = automata_table[1];
                  3'h2:
                      \active_state$next [26] = automata_table[2];
                  3'h3:
                      \active_state$next [26] = automata_table[3];
                  3'h4:
                      \active_state$next [26] = automata_table[4];
                  3'h5:
                      \active_state$next [26] = automata_table[5];
                  3'h6:
                      \active_state$next [26] = automata_table[6];
                  3'h7:
                      \active_state$next [26] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[28:26])
                  3'h0:
                      \active_state$next [27] = automata_table[0];
                  3'h1:
                      \active_state$next [27] = automata_table[1];
                  3'h2:
                      \active_state$next [27] = automata_table[2];
                  3'h3:
                      \active_state$next [27] = automata_table[3];
                  3'h4:
                      \active_state$next [27] = automata_table[4];
                  3'h5:
                      \active_state$next [27] = automata_table[5];
                  3'h6:
                      \active_state$next [27] = automata_table[6];
                  3'h7:
                      \active_state$next [27] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[29:27])
                  3'h0:
                      \active_state$next [28] = automata_table[0];
                  3'h1:
                      \active_state$next [28] = automata_table[1];
                  3'h2:
                      \active_state$next [28] = automata_table[2];
                  3'h3:
                      \active_state$next [28] = automata_table[3];
                  3'h4:
                      \active_state$next [28] = automata_table[4];
                  3'h5:
                      \active_state$next [28] = automata_table[5];
                  3'h6:
                      \active_state$next [28] = automata_table[6];
                  3'h7:
                      \active_state$next [28] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[30:28])
                  3'h0:
                      \active_state$next [29] = automata_table[0];
                  3'h1:
                      \active_state$next [29] = automata_table[1];
                  3'h2:
                      \active_state$next [29] = automata_table[2];
                  3'h3:
                      \active_state$next [29] = automata_table[3];
                  3'h4:
                      \active_state$next [29] = automata_table[4];
                  3'h5:
                      \active_state$next [29] = automata_table[5];
                  3'h6:
                      \active_state$next [29] = automata_table[6];
                  3'h7:
                      \active_state$next [29] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[31:29])
                  3'h0:
                      \active_state$next [30] = automata_table[0];
                  3'h1:
                      \active_state$next [30] = automata_table[1];
                  3'h2:
                      \active_state$next [30] = automata_table[2];
                  3'h3:
                      \active_state$next [30] = automata_table[3];
                  3'h4:
                      \active_state$next [30] = automata_table[4];
                  3'h5:
                      \active_state$next [30] = automata_table[5];
                  3'h6:
                      \active_state$next [30] = automata_table[6];
                  3'h7:
                      \active_state$next [30] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[32:30])
                  3'h0:
                      \active_state$next [31] = automata_table[0];
                  3'h1:
                      \active_state$next [31] = automata_table[1];
                  3'h2:
                      \active_state$next [31] = automata_table[2];
                  3'h3:
                      \active_state$next [31] = automata_table[3];
                  3'h4:
                      \active_state$next [31] = automata_table[4];
                  3'h5:
                      \active_state$next [31] = automata_table[5];
                  3'h6:
                      \active_state$next [31] = automata_table[6];
                  3'h7:
                      \active_state$next [31] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[33:31])
                  3'h0:
                      \active_state$next [32] = automata_table[0];
                  3'h1:
                      \active_state$next [32] = automata_table[1];
                  3'h2:
                      \active_state$next [32] = automata_table[2];
                  3'h3:
                      \active_state$next [32] = automata_table[3];
                  3'h4:
                      \active_state$next [32] = automata_table[4];
                  3'h5:
                      \active_state$next [32] = automata_table[5];
                  3'h6:
                      \active_state$next [32] = automata_table[6];
                  3'h7:
                      \active_state$next [32] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[34:32])
                  3'h0:
                      \active_state$next [33] = automata_table[0];
                  3'h1:
                      \active_state$next [33] = automata_table[1];
                  3'h2:
                      \active_state$next [33] = automata_table[2];
                  3'h3:
                      \active_state$next [33] = automata_table[3];
                  3'h4:
                      \active_state$next [33] = automata_table[4];
                  3'h5:
                      \active_state$next [33] = automata_table[5];
                  3'h6:
                      \active_state$next [33] = automata_table[6];
                  3'h7:
                      \active_state$next [33] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[35:33])
                  3'h0:
                      \active_state$next [34] = automata_table[0];
                  3'h1:
                      \active_state$next [34] = automata_table[1];
                  3'h2:
                      \active_state$next [34] = automata_table[2];
                  3'h3:
                      \active_state$next [34] = automata_table[3];
                  3'h4:
                      \active_state$next [34] = automata_table[4];
                  3'h5:
                      \active_state$next [34] = automata_table[5];
                  3'h6:
                      \active_state$next [34] = automata_table[6];
                  3'h7:
                      \active_state$next [34] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[36:34])
                  3'h0:
                      \active_state$next [35] = automata_table[0];
                  3'h1:
                      \active_state$next [35] = automata_table[1];
                  3'h2:
                      \active_state$next [35] = automata_table[2];
                  3'h3:
                      \active_state$next [35] = automata_table[3];
                  3'h4:
                      \active_state$next [35] = automata_table[4];
                  3'h5:
                      \active_state$next [35] = automata_table[5];
                  3'h6:
                      \active_state$next [35] = automata_table[6];
                  3'h7:
                      \active_state$next [35] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[37:35])
                  3'h0:
                      \active_state$next [36] = automata_table[0];
                  3'h1:
                      \active_state$next [36] = automata_table[1];
                  3'h2:
                      \active_state$next [36] = automata_table[2];
                  3'h3:
                      \active_state$next [36] = automata_table[3];
                  3'h4:
                      \active_state$next [36] = automata_table[4];
                  3'h5:
                      \active_state$next [36] = automata_table[5];
                  3'h6:
                      \active_state$next [36] = automata_table[6];
                  3'h7:
                      \active_state$next [36] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[38:36])
                  3'h0:
                      \active_state$next [37] = automata_table[0];
                  3'h1:
                      \active_state$next [37] = automata_table[1];
                  3'h2:
                      \active_state$next [37] = automata_table[2];
                  3'h3:
                      \active_state$next [37] = automata_table[3];
                  3'h4:
                      \active_state$next [37] = automata_table[4];
                  3'h5:
                      \active_state$next [37] = automata_table[5];
                  3'h6:
                      \active_state$next [37] = automata_table[6];
                  3'h7:
                      \active_state$next [37] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[39:37])
                  3'h0:
                      \active_state$next [38] = automata_table[0];
                  3'h1:
                      \active_state$next [38] = automata_table[1];
                  3'h2:
                      \active_state$next [38] = automata_table[2];
                  3'h3:
                      \active_state$next [38] = automata_table[3];
                  3'h4:
                      \active_state$next [38] = automata_table[4];
                  3'h5:
                      \active_state$next [38] = automata_table[5];
                  3'h6:
                      \active_state$next [38] = automata_table[6];
                  3'h7:
                      \active_state$next [38] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[40:38])
                  3'h0:
                      \active_state$next [39] = automata_table[0];
                  3'h1:
                      \active_state$next [39] = automata_table[1];
                  3'h2:
                      \active_state$next [39] = automata_table[2];
                  3'h3:
                      \active_state$next [39] = automata_table[3];
                  3'h4:
                      \active_state$next [39] = automata_table[4];
                  3'h5:
                      \active_state$next [39] = automata_table[5];
                  3'h6:
                      \active_state$next [39] = automata_table[6];
                  3'h7:
                      \active_state$next [39] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[41:39])
                  3'h0:
                      \active_state$next [40] = automata_table[0];
                  3'h1:
                      \active_state$next [40] = automata_table[1];
                  3'h2:
                      \active_state$next [40] = automata_table[2];
                  3'h3:
                      \active_state$next [40] = automata_table[3];
                  3'h4:
                      \active_state$next [40] = automata_table[4];
                  3'h5:
                      \active_state$next [40] = automata_table[5];
                  3'h6:
                      \active_state$next [40] = automata_table[6];
                  3'h7:
                      \active_state$next [40] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[42:40])
                  3'h0:
                      \active_state$next [41] = automata_table[0];
                  3'h1:
                      \active_state$next [41] = automata_table[1];
                  3'h2:
                      \active_state$next [41] = automata_table[2];
                  3'h3:
                      \active_state$next [41] = automata_table[3];
                  3'h4:
                      \active_state$next [41] = automata_table[4];
                  3'h5:
                      \active_state$next [41] = automata_table[5];
                  3'h6:
                      \active_state$next [41] = automata_table[6];
                  3'h7:
                      \active_state$next [41] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[43:41])
                  3'h0:
                      \active_state$next [42] = automata_table[0];
                  3'h1:
                      \active_state$next [42] = automata_table[1];
                  3'h2:
                      \active_state$next [42] = automata_table[2];
                  3'h3:
                      \active_state$next [42] = automata_table[3];
                  3'h4:
                      \active_state$next [42] = automata_table[4];
                  3'h5:
                      \active_state$next [42] = automata_table[5];
                  3'h6:
                      \active_state$next [42] = automata_table[6];
                  3'h7:
                      \active_state$next [42] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[44:42])
                  3'h0:
                      \active_state$next [43] = automata_table[0];
                  3'h1:
                      \active_state$next [43] = automata_table[1];
                  3'h2:
                      \active_state$next [43] = automata_table[2];
                  3'h3:
                      \active_state$next [43] = automata_table[3];
                  3'h4:
                      \active_state$next [43] = automata_table[4];
                  3'h5:
                      \active_state$next [43] = automata_table[5];
                  3'h6:
                      \active_state$next [43] = automata_table[6];
                  3'h7:
                      \active_state$next [43] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[45:43])
                  3'h0:
                      \active_state$next [44] = automata_table[0];
                  3'h1:
                      \active_state$next [44] = automata_table[1];
                  3'h2:
                      \active_state$next [44] = automata_table[2];
                  3'h3:
                      \active_state$next [44] = automata_table[3];
                  3'h4:
                      \active_state$next [44] = automata_table[4];
                  3'h5:
                      \active_state$next [44] = automata_table[5];
                  3'h6:
                      \active_state$next [44] = automata_table[6];
                  3'h7:
                      \active_state$next [44] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[46:44])
                  3'h0:
                      \active_state$next [45] = automata_table[0];
                  3'h1:
                      \active_state$next [45] = automata_table[1];
                  3'h2:
                      \active_state$next [45] = automata_table[2];
                  3'h3:
                      \active_state$next [45] = automata_table[3];
                  3'h4:
                      \active_state$next [45] = automata_table[4];
                  3'h5:
                      \active_state$next [45] = automata_table[5];
                  3'h6:
                      \active_state$next [45] = automata_table[6];
                  3'h7:
                      \active_state$next [45] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[47:45])
                  3'h0:
                      \active_state$next [46] = automata_table[0];
                  3'h1:
                      \active_state$next [46] = automata_table[1];
                  3'h2:
                      \active_state$next [46] = automata_table[2];
                  3'h3:
                      \active_state$next [46] = automata_table[3];
                  3'h4:
                      \active_state$next [46] = automata_table[4];
                  3'h5:
                      \active_state$next [46] = automata_table[5];
                  3'h6:
                      \active_state$next [46] = automata_table[6];
                  3'h7:
                      \active_state$next [46] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[48:46])
                  3'h0:
                      \active_state$next [47] = automata_table[0];
                  3'h1:
                      \active_state$next [47] = automata_table[1];
                  3'h2:
                      \active_state$next [47] = automata_table[2];
                  3'h3:
                      \active_state$next [47] = automata_table[3];
                  3'h4:
                      \active_state$next [47] = automata_table[4];
                  3'h5:
                      \active_state$next [47] = automata_table[5];
                  3'h6:
                      \active_state$next [47] = automata_table[6];
                  3'h7:
                      \active_state$next [47] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[49:47])
                  3'h0:
                      \active_state$next [48] = automata_table[0];
                  3'h1:
                      \active_state$next [48] = automata_table[1];
                  3'h2:
                      \active_state$next [48] = automata_table[2];
                  3'h3:
                      \active_state$next [48] = automata_table[3];
                  3'h4:
                      \active_state$next [48] = automata_table[4];
                  3'h5:
                      \active_state$next [48] = automata_table[5];
                  3'h6:
                      \active_state$next [48] = automata_table[6];
                  3'h7:
                      \active_state$next [48] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[50:48])
                  3'h0:
                      \active_state$next [49] = automata_table[0];
                  3'h1:
                      \active_state$next [49] = automata_table[1];
                  3'h2:
                      \active_state$next [49] = automata_table[2];
                  3'h3:
                      \active_state$next [49] = automata_table[3];
                  3'h4:
                      \active_state$next [49] = automata_table[4];
                  3'h5:
                      \active_state$next [49] = automata_table[5];
                  3'h6:
                      \active_state$next [49] = automata_table[6];
                  3'h7:
                      \active_state$next [49] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[51:49])
                  3'h0:
                      \active_state$next [50] = automata_table[0];
                  3'h1:
                      \active_state$next [50] = automata_table[1];
                  3'h2:
                      \active_state$next [50] = automata_table[2];
                  3'h3:
                      \active_state$next [50] = automata_table[3];
                  3'h4:
                      \active_state$next [50] = automata_table[4];
                  3'h5:
                      \active_state$next [50] = automata_table[5];
                  3'h6:
                      \active_state$next [50] = automata_table[6];
                  3'h7:
                      \active_state$next [50] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[52:50])
                  3'h0:
                      \active_state$next [51] = automata_table[0];
                  3'h1:
                      \active_state$next [51] = automata_table[1];
                  3'h2:
                      \active_state$next [51] = automata_table[2];
                  3'h3:
                      \active_state$next [51] = automata_table[3];
                  3'h4:
                      \active_state$next [51] = automata_table[4];
                  3'h5:
                      \active_state$next [51] = automata_table[5];
                  3'h6:
                      \active_state$next [51] = automata_table[6];
                  3'h7:
                      \active_state$next [51] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[53:51])
                  3'h0:
                      \active_state$next [52] = automata_table[0];
                  3'h1:
                      \active_state$next [52] = automata_table[1];
                  3'h2:
                      \active_state$next [52] = automata_table[2];
                  3'h3:
                      \active_state$next [52] = automata_table[3];
                  3'h4:
                      \active_state$next [52] = automata_table[4];
                  3'h5:
                      \active_state$next [52] = automata_table[5];
                  3'h6:
                      \active_state$next [52] = automata_table[6];
                  3'h7:
                      \active_state$next [52] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[54:52])
                  3'h0:
                      \active_state$next [53] = automata_table[0];
                  3'h1:
                      \active_state$next [53] = automata_table[1];
                  3'h2:
                      \active_state$next [53] = automata_table[2];
                  3'h3:
                      \active_state$next [53] = automata_table[3];
                  3'h4:
                      \active_state$next [53] = automata_table[4];
                  3'h5:
                      \active_state$next [53] = automata_table[5];
                  3'h6:
                      \active_state$next [53] = automata_table[6];
                  3'h7:
                      \active_state$next [53] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[55:53])
                  3'h0:
                      \active_state$next [54] = automata_table[0];
                  3'h1:
                      \active_state$next [54] = automata_table[1];
                  3'h2:
                      \active_state$next [54] = automata_table[2];
                  3'h3:
                      \active_state$next [54] = automata_table[3];
                  3'h4:
                      \active_state$next [54] = automata_table[4];
                  3'h5:
                      \active_state$next [54] = automata_table[5];
                  3'h6:
                      \active_state$next [54] = automata_table[6];
                  3'h7:
                      \active_state$next [54] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[56:54])
                  3'h0:
                      \active_state$next [55] = automata_table[0];
                  3'h1:
                      \active_state$next [55] = automata_table[1];
                  3'h2:
                      \active_state$next [55] = automata_table[2];
                  3'h3:
                      \active_state$next [55] = automata_table[3];
                  3'h4:
                      \active_state$next [55] = automata_table[4];
                  3'h5:
                      \active_state$next [55] = automata_table[5];
                  3'h6:
                      \active_state$next [55] = automata_table[6];
                  3'h7:
                      \active_state$next [55] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[57:55])
                  3'h0:
                      \active_state$next [56] = automata_table[0];
                  3'h1:
                      \active_state$next [56] = automata_table[1];
                  3'h2:
                      \active_state$next [56] = automata_table[2];
                  3'h3:
                      \active_state$next [56] = automata_table[3];
                  3'h4:
                      \active_state$next [56] = automata_table[4];
                  3'h5:
                      \active_state$next [56] = automata_table[5];
                  3'h6:
                      \active_state$next [56] = automata_table[6];
                  3'h7:
                      \active_state$next [56] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[58:56])
                  3'h0:
                      \active_state$next [57] = automata_table[0];
                  3'h1:
                      \active_state$next [57] = automata_table[1];
                  3'h2:
                      \active_state$next [57] = automata_table[2];
                  3'h3:
                      \active_state$next [57] = automata_table[3];
                  3'h4:
                      \active_state$next [57] = automata_table[4];
                  3'h5:
                      \active_state$next [57] = automata_table[5];
                  3'h6:
                      \active_state$next [57] = automata_table[6];
                  3'h7:
                      \active_state$next [57] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[59:57])
                  3'h0:
                      \active_state$next [58] = automata_table[0];
                  3'h1:
                      \active_state$next [58] = automata_table[1];
                  3'h2:
                      \active_state$next [58] = automata_table[2];
                  3'h3:
                      \active_state$next [58] = automata_table[3];
                  3'h4:
                      \active_state$next [58] = automata_table[4];
                  3'h5:
                      \active_state$next [58] = automata_table[5];
                  3'h6:
                      \active_state$next [58] = automata_table[6];
                  3'h7:
                      \active_state$next [58] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[60:58])
                  3'h0:
                      \active_state$next [59] = automata_table[0];
                  3'h1:
                      \active_state$next [59] = automata_table[1];
                  3'h2:
                      \active_state$next [59] = automata_table[2];
                  3'h3:
                      \active_state$next [59] = automata_table[3];
                  3'h4:
                      \active_state$next [59] = automata_table[4];
                  3'h5:
                      \active_state$next [59] = automata_table[5];
                  3'h6:
                      \active_state$next [59] = automata_table[6];
                  3'h7:
                      \active_state$next [59] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[61:59])
                  3'h0:
                      \active_state$next [60] = automata_table[0];
                  3'h1:
                      \active_state$next [60] = automata_table[1];
                  3'h2:
                      \active_state$next [60] = automata_table[2];
                  3'h3:
                      \active_state$next [60] = automata_table[3];
                  3'h4:
                      \active_state$next [60] = automata_table[4];
                  3'h5:
                      \active_state$next [60] = automata_table[5];
                  3'h6:
                      \active_state$next [60] = automata_table[6];
                  3'h7:
                      \active_state$next [60] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[62:60])
                  3'h0:
                      \active_state$next [61] = automata_table[0];
                  3'h1:
                      \active_state$next [61] = automata_table[1];
                  3'h2:
                      \active_state$next [61] = automata_table[2];
                  3'h3:
                      \active_state$next [61] = automata_table[3];
                  3'h4:
                      \active_state$next [61] = automata_table[4];
                  3'h5:
                      \active_state$next [61] = automata_table[5];
                  3'h6:
                      \active_state$next [61] = automata_table[6];
                  3'h7:
                      \active_state$next [61] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[63:61])
                  3'h0:
                      \active_state$next [62] = automata_table[0];
                  3'h1:
                      \active_state$next [62] = automata_table[1];
                  3'h2:
                      \active_state$next [62] = automata_table[2];
                  3'h3:
                      \active_state$next [62] = automata_table[3];
                  3'h4:
                      \active_state$next [62] = automata_table[4];
                  3'h5:
                      \active_state$next [62] = automata_table[5];
                  3'h6:
                      \active_state$next [62] = automata_table[6];
                  3'h7:
                      \active_state$next [62] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[64:62])
                  3'h0:
                      \active_state$next [63] = automata_table[0];
                  3'h1:
                      \active_state$next [63] = automata_table[1];
                  3'h2:
                      \active_state$next [63] = automata_table[2];
                  3'h3:
                      \active_state$next [63] = automata_table[3];
                  3'h4:
                      \active_state$next [63] = automata_table[4];
                  3'h5:
                      \active_state$next [63] = automata_table[5];
                  3'h6:
                      \active_state$next [63] = automata_table[6];
                  3'h7:
                      \active_state$next [63] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[65:63])
                  3'h0:
                      \active_state$next [64] = automata_table[0];
                  3'h1:
                      \active_state$next [64] = automata_table[1];
                  3'h2:
                      \active_state$next [64] = automata_table[2];
                  3'h3:
                      \active_state$next [64] = automata_table[3];
                  3'h4:
                      \active_state$next [64] = automata_table[4];
                  3'h5:
                      \active_state$next [64] = automata_table[5];
                  3'h6:
                      \active_state$next [64] = automata_table[6];
                  3'h7:
                      \active_state$next [64] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[66:64])
                  3'h0:
                      \active_state$next [65] = automata_table[0];
                  3'h1:
                      \active_state$next [65] = automata_table[1];
                  3'h2:
                      \active_state$next [65] = automata_table[2];
                  3'h3:
                      \active_state$next [65] = automata_table[3];
                  3'h4:
                      \active_state$next [65] = automata_table[4];
                  3'h5:
                      \active_state$next [65] = automata_table[5];
                  3'h6:
                      \active_state$next [65] = automata_table[6];
                  3'h7:
                      \active_state$next [65] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[67:65])
                  3'h0:
                      \active_state$next [66] = automata_table[0];
                  3'h1:
                      \active_state$next [66] = automata_table[1];
                  3'h2:
                      \active_state$next [66] = automata_table[2];
                  3'h3:
                      \active_state$next [66] = automata_table[3];
                  3'h4:
                      \active_state$next [66] = automata_table[4];
                  3'h5:
                      \active_state$next [66] = automata_table[5];
                  3'h6:
                      \active_state$next [66] = automata_table[6];
                  3'h7:
                      \active_state$next [66] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[68:66])
                  3'h0:
                      \active_state$next [67] = automata_table[0];
                  3'h1:
                      \active_state$next [67] = automata_table[1];
                  3'h2:
                      \active_state$next [67] = automata_table[2];
                  3'h3:
                      \active_state$next [67] = automata_table[3];
                  3'h4:
                      \active_state$next [67] = automata_table[4];
                  3'h5:
                      \active_state$next [67] = automata_table[5];
                  3'h6:
                      \active_state$next [67] = automata_table[6];
                  3'h7:
                      \active_state$next [67] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[69:67])
                  3'h0:
                      \active_state$next [68] = automata_table[0];
                  3'h1:
                      \active_state$next [68] = automata_table[1];
                  3'h2:
                      \active_state$next [68] = automata_table[2];
                  3'h3:
                      \active_state$next [68] = automata_table[3];
                  3'h4:
                      \active_state$next [68] = automata_table[4];
                  3'h5:
                      \active_state$next [68] = automata_table[5];
                  3'h6:
                      \active_state$next [68] = automata_table[6];
                  3'h7:
                      \active_state$next [68] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[70:68])
                  3'h0:
                      \active_state$next [69] = automata_table[0];
                  3'h1:
                      \active_state$next [69] = automata_table[1];
                  3'h2:
                      \active_state$next [69] = automata_table[2];
                  3'h3:
                      \active_state$next [69] = automata_table[3];
                  3'h4:
                      \active_state$next [69] = automata_table[4];
                  3'h5:
                      \active_state$next [69] = automata_table[5];
                  3'h6:
                      \active_state$next [69] = automata_table[6];
                  3'h7:
                      \active_state$next [69] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[71:69])
                  3'h0:
                      \active_state$next [70] = automata_table[0];
                  3'h1:
                      \active_state$next [70] = automata_table[1];
                  3'h2:
                      \active_state$next [70] = automata_table[2];
                  3'h3:
                      \active_state$next [70] = automata_table[3];
                  3'h4:
                      \active_state$next [70] = automata_table[4];
                  3'h5:
                      \active_state$next [70] = automata_table[5];
                  3'h6:
                      \active_state$next [70] = automata_table[6];
                  3'h7:
                      \active_state$next [70] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[72:70])
                  3'h0:
                      \active_state$next [71] = automata_table[0];
                  3'h1:
                      \active_state$next [71] = automata_table[1];
                  3'h2:
                      \active_state$next [71] = automata_table[2];
                  3'h3:
                      \active_state$next [71] = automata_table[3];
                  3'h4:
                      \active_state$next [71] = automata_table[4];
                  3'h5:
                      \active_state$next [71] = automata_table[5];
                  3'h6:
                      \active_state$next [71] = automata_table[6];
                  3'h7:
                      \active_state$next [71] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[73:71])
                  3'h0:
                      \active_state$next [72] = automata_table[0];
                  3'h1:
                      \active_state$next [72] = automata_table[1];
                  3'h2:
                      \active_state$next [72] = automata_table[2];
                  3'h3:
                      \active_state$next [72] = automata_table[3];
                  3'h4:
                      \active_state$next [72] = automata_table[4];
                  3'h5:
                      \active_state$next [72] = automata_table[5];
                  3'h6:
                      \active_state$next [72] = automata_table[6];
                  3'h7:
                      \active_state$next [72] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[74:72])
                  3'h0:
                      \active_state$next [73] = automata_table[0];
                  3'h1:
                      \active_state$next [73] = automata_table[1];
                  3'h2:
                      \active_state$next [73] = automata_table[2];
                  3'h3:
                      \active_state$next [73] = automata_table[3];
                  3'h4:
                      \active_state$next [73] = automata_table[4];
                  3'h5:
                      \active_state$next [73] = automata_table[5];
                  3'h6:
                      \active_state$next [73] = automata_table[6];
                  3'h7:
                      \active_state$next [73] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[75:73])
                  3'h0:
                      \active_state$next [74] = automata_table[0];
                  3'h1:
                      \active_state$next [74] = automata_table[1];
                  3'h2:
                      \active_state$next [74] = automata_table[2];
                  3'h3:
                      \active_state$next [74] = automata_table[3];
                  3'h4:
                      \active_state$next [74] = automata_table[4];
                  3'h5:
                      \active_state$next [74] = automata_table[5];
                  3'h6:
                      \active_state$next [74] = automata_table[6];
                  3'h7:
                      \active_state$next [74] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[76:74])
                  3'h0:
                      \active_state$next [75] = automata_table[0];
                  3'h1:
                      \active_state$next [75] = automata_table[1];
                  3'h2:
                      \active_state$next [75] = automata_table[2];
                  3'h3:
                      \active_state$next [75] = automata_table[3];
                  3'h4:
                      \active_state$next [75] = automata_table[4];
                  3'h5:
                      \active_state$next [75] = automata_table[5];
                  3'h6:
                      \active_state$next [75] = automata_table[6];
                  3'h7:
                      \active_state$next [75] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[77:75])
                  3'h0:
                      \active_state$next [76] = automata_table[0];
                  3'h1:
                      \active_state$next [76] = automata_table[1];
                  3'h2:
                      \active_state$next [76] = automata_table[2];
                  3'h3:
                      \active_state$next [76] = automata_table[3];
                  3'h4:
                      \active_state$next [76] = automata_table[4];
                  3'h5:
                      \active_state$next [76] = automata_table[5];
                  3'h6:
                      \active_state$next [76] = automata_table[6];
                  3'h7:
                      \active_state$next [76] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[78:76])
                  3'h0:
                      \active_state$next [77] = automata_table[0];
                  3'h1:
                      \active_state$next [77] = automata_table[1];
                  3'h2:
                      \active_state$next [77] = automata_table[2];
                  3'h3:
                      \active_state$next [77] = automata_table[3];
                  3'h4:
                      \active_state$next [77] = automata_table[4];
                  3'h5:
                      \active_state$next [77] = automata_table[5];
                  3'h6:
                      \active_state$next [77] = automata_table[6];
                  3'h7:
                      \active_state$next [77] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[79:77])
                  3'h0:
                      \active_state$next [78] = automata_table[0];
                  3'h1:
                      \active_state$next [78] = automata_table[1];
                  3'h2:
                      \active_state$next [78] = automata_table[2];
                  3'h3:
                      \active_state$next [78] = automata_table[3];
                  3'h4:
                      \active_state$next [78] = automata_table[4];
                  3'h5:
                      \active_state$next [78] = automata_table[5];
                  3'h6:
                      \active_state$next [78] = automata_table[6];
                  3'h7:
                      \active_state$next [78] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[80:78])
                  3'h0:
                      \active_state$next [79] = automata_table[0];
                  3'h1:
                      \active_state$next [79] = automata_table[1];
                  3'h2:
                      \active_state$next [79] = automata_table[2];
                  3'h3:
                      \active_state$next [79] = automata_table[3];
                  3'h4:
                      \active_state$next [79] = automata_table[4];
                  3'h5:
                      \active_state$next [79] = automata_table[5];
                  3'h6:
                      \active_state$next [79] = automata_table[6];
                  3'h7:
                      \active_state$next [79] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[81:79])
                  3'h0:
                      \active_state$next [80] = automata_table[0];
                  3'h1:
                      \active_state$next [80] = automata_table[1];
                  3'h2:
                      \active_state$next [80] = automata_table[2];
                  3'h3:
                      \active_state$next [80] = automata_table[3];
                  3'h4:
                      \active_state$next [80] = automata_table[4];
                  3'h5:
                      \active_state$next [80] = automata_table[5];
                  3'h6:
                      \active_state$next [80] = automata_table[6];
                  3'h7:
                      \active_state$next [80] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[82:80])
                  3'h0:
                      \active_state$next [81] = automata_table[0];
                  3'h1:
                      \active_state$next [81] = automata_table[1];
                  3'h2:
                      \active_state$next [81] = automata_table[2];
                  3'h3:
                      \active_state$next [81] = automata_table[3];
                  3'h4:
                      \active_state$next [81] = automata_table[4];
                  3'h5:
                      \active_state$next [81] = automata_table[5];
                  3'h6:
                      \active_state$next [81] = automata_table[6];
                  3'h7:
                      \active_state$next [81] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[83:81])
                  3'h0:
                      \active_state$next [82] = automata_table[0];
                  3'h1:
                      \active_state$next [82] = automata_table[1];
                  3'h2:
                      \active_state$next [82] = automata_table[2];
                  3'h3:
                      \active_state$next [82] = automata_table[3];
                  3'h4:
                      \active_state$next [82] = automata_table[4];
                  3'h5:
                      \active_state$next [82] = automata_table[5];
                  3'h6:
                      \active_state$next [82] = automata_table[6];
                  3'h7:
                      \active_state$next [82] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[84:82])
                  3'h0:
                      \active_state$next [83] = automata_table[0];
                  3'h1:
                      \active_state$next [83] = automata_table[1];
                  3'h2:
                      \active_state$next [83] = automata_table[2];
                  3'h3:
                      \active_state$next [83] = automata_table[3];
                  3'h4:
                      \active_state$next [83] = automata_table[4];
                  3'h5:
                      \active_state$next [83] = automata_table[5];
                  3'h6:
                      \active_state$next [83] = automata_table[6];
                  3'h7:
                      \active_state$next [83] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[85:83])
                  3'h0:
                      \active_state$next [84] = automata_table[0];
                  3'h1:
                      \active_state$next [84] = automata_table[1];
                  3'h2:
                      \active_state$next [84] = automata_table[2];
                  3'h3:
                      \active_state$next [84] = automata_table[3];
                  3'h4:
                      \active_state$next [84] = automata_table[4];
                  3'h5:
                      \active_state$next [84] = automata_table[5];
                  3'h6:
                      \active_state$next [84] = automata_table[6];
                  3'h7:
                      \active_state$next [84] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[86:84])
                  3'h0:
                      \active_state$next [85] = automata_table[0];
                  3'h1:
                      \active_state$next [85] = automata_table[1];
                  3'h2:
                      \active_state$next [85] = automata_table[2];
                  3'h3:
                      \active_state$next [85] = automata_table[3];
                  3'h4:
                      \active_state$next [85] = automata_table[4];
                  3'h5:
                      \active_state$next [85] = automata_table[5];
                  3'h6:
                      \active_state$next [85] = automata_table[6];
                  3'h7:
                      \active_state$next [85] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[87:85])
                  3'h0:
                      \active_state$next [86] = automata_table[0];
                  3'h1:
                      \active_state$next [86] = automata_table[1];
                  3'h2:
                      \active_state$next [86] = automata_table[2];
                  3'h3:
                      \active_state$next [86] = automata_table[3];
                  3'h4:
                      \active_state$next [86] = automata_table[4];
                  3'h5:
                      \active_state$next [86] = automata_table[5];
                  3'h6:
                      \active_state$next [86] = automata_table[6];
                  3'h7:
                      \active_state$next [86] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[88:86])
                  3'h0:
                      \active_state$next [87] = automata_table[0];
                  3'h1:
                      \active_state$next [87] = automata_table[1];
                  3'h2:
                      \active_state$next [87] = automata_table[2];
                  3'h3:
                      \active_state$next [87] = automata_table[3];
                  3'h4:
                      \active_state$next [87] = automata_table[4];
                  3'h5:
                      \active_state$next [87] = automata_table[5];
                  3'h6:
                      \active_state$next [87] = automata_table[6];
                  3'h7:
                      \active_state$next [87] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[89:87])
                  3'h0:
                      \active_state$next [88] = automata_table[0];
                  3'h1:
                      \active_state$next [88] = automata_table[1];
                  3'h2:
                      \active_state$next [88] = automata_table[2];
                  3'h3:
                      \active_state$next [88] = automata_table[3];
                  3'h4:
                      \active_state$next [88] = automata_table[4];
                  3'h5:
                      \active_state$next [88] = automata_table[5];
                  3'h6:
                      \active_state$next [88] = automata_table[6];
                  3'h7:
                      \active_state$next [88] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[90:88])
                  3'h0:
                      \active_state$next [89] = automata_table[0];
                  3'h1:
                      \active_state$next [89] = automata_table[1];
                  3'h2:
                      \active_state$next [89] = automata_table[2];
                  3'h3:
                      \active_state$next [89] = automata_table[3];
                  3'h4:
                      \active_state$next [89] = automata_table[4];
                  3'h5:
                      \active_state$next [89] = automata_table[5];
                  3'h6:
                      \active_state$next [89] = automata_table[6];
                  3'h7:
                      \active_state$next [89] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[91:89])
                  3'h0:
                      \active_state$next [90] = automata_table[0];
                  3'h1:
                      \active_state$next [90] = automata_table[1];
                  3'h2:
                      \active_state$next [90] = automata_table[2];
                  3'h3:
                      \active_state$next [90] = automata_table[3];
                  3'h4:
                      \active_state$next [90] = automata_table[4];
                  3'h5:
                      \active_state$next [90] = automata_table[5];
                  3'h6:
                      \active_state$next [90] = automata_table[6];
                  3'h7:
                      \active_state$next [90] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[92:90])
                  3'h0:
                      \active_state$next [91] = automata_table[0];
                  3'h1:
                      \active_state$next [91] = automata_table[1];
                  3'h2:
                      \active_state$next [91] = automata_table[2];
                  3'h3:
                      \active_state$next [91] = automata_table[3];
                  3'h4:
                      \active_state$next [91] = automata_table[4];
                  3'h5:
                      \active_state$next [91] = automata_table[5];
                  3'h6:
                      \active_state$next [91] = automata_table[6];
                  3'h7:
                      \active_state$next [91] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[93:91])
                  3'h0:
                      \active_state$next [92] = automata_table[0];
                  3'h1:
                      \active_state$next [92] = automata_table[1];
                  3'h2:
                      \active_state$next [92] = automata_table[2];
                  3'h3:
                      \active_state$next [92] = automata_table[3];
                  3'h4:
                      \active_state$next [92] = automata_table[4];
                  3'h5:
                      \active_state$next [92] = automata_table[5];
                  3'h6:
                      \active_state$next [92] = automata_table[6];
                  3'h7:
                      \active_state$next [92] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[94:92])
                  3'h0:
                      \active_state$next [93] = automata_table[0];
                  3'h1:
                      \active_state$next [93] = automata_table[1];
                  3'h2:
                      \active_state$next [93] = automata_table[2];
                  3'h3:
                      \active_state$next [93] = automata_table[3];
                  3'h4:
                      \active_state$next [93] = automata_table[4];
                  3'h5:
                      \active_state$next [93] = automata_table[5];
                  3'h6:
                      \active_state$next [93] = automata_table[6];
                  3'h7:
                      \active_state$next [93] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[95:93])
                  3'h0:
                      \active_state$next [94] = automata_table[0];
                  3'h1:
                      \active_state$next [94] = automata_table[1];
                  3'h2:
                      \active_state$next [94] = automata_table[2];
                  3'h3:
                      \active_state$next [94] = automata_table[3];
                  3'h4:
                      \active_state$next [94] = automata_table[4];
                  3'h5:
                      \active_state$next [94] = automata_table[5];
                  3'h6:
                      \active_state$next [94] = automata_table[6];
                  3'h7:
                      \active_state$next [94] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[96:94])
                  3'h0:
                      \active_state$next [95] = automata_table[0];
                  3'h1:
                      \active_state$next [95] = automata_table[1];
                  3'h2:
                      \active_state$next [95] = automata_table[2];
                  3'h3:
                      \active_state$next [95] = automata_table[3];
                  3'h4:
                      \active_state$next [95] = automata_table[4];
                  3'h5:
                      \active_state$next [95] = automata_table[5];
                  3'h6:
                      \active_state$next [95] = automata_table[6];
                  3'h7:
                      \active_state$next [95] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[97:95])
                  3'h0:
                      \active_state$next [96] = automata_table[0];
                  3'h1:
                      \active_state$next [96] = automata_table[1];
                  3'h2:
                      \active_state$next [96] = automata_table[2];
                  3'h3:
                      \active_state$next [96] = automata_table[3];
                  3'h4:
                      \active_state$next [96] = automata_table[4];
                  3'h5:
                      \active_state$next [96] = automata_table[5];
                  3'h6:
                      \active_state$next [96] = automata_table[6];
                  3'h7:
                      \active_state$next [96] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[98:96])
                  3'h0:
                      \active_state$next [97] = automata_table[0];
                  3'h1:
                      \active_state$next [97] = automata_table[1];
                  3'h2:
                      \active_state$next [97] = automata_table[2];
                  3'h3:
                      \active_state$next [97] = automata_table[3];
                  3'h4:
                      \active_state$next [97] = automata_table[4];
                  3'h5:
                      \active_state$next [97] = automata_table[5];
                  3'h6:
                      \active_state$next [97] = automata_table[6];
                  3'h7:
                      \active_state$next [97] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[99:97])
                  3'h0:
                      \active_state$next [98] = automata_table[0];
                  3'h1:
                      \active_state$next [98] = automata_table[1];
                  3'h2:
                      \active_state$next [98] = automata_table[2];
                  3'h3:
                      \active_state$next [98] = automata_table[3];
                  3'h4:
                      \active_state$next [98] = automata_table[4];
                  3'h5:
                      \active_state$next [98] = automata_table[5];
                  3'h6:
                      \active_state$next [98] = automata_table[6];
                  3'h7:
                      \active_state$next [98] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[100:98])
                  3'h0:
                      \active_state$next [99] = automata_table[0];
                  3'h1:
                      \active_state$next [99] = automata_table[1];
                  3'h2:
                      \active_state$next [99] = automata_table[2];
                  3'h3:
                      \active_state$next [99] = automata_table[3];
                  3'h4:
                      \active_state$next [99] = automata_table[4];
                  3'h5:
                      \active_state$next [99] = automata_table[5];
                  3'h6:
                      \active_state$next [99] = automata_table[6];
                  3'h7:
                      \active_state$next [99] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[101:99])
                  3'h0:
                      \active_state$next [100] = automata_table[0];
                  3'h1:
                      \active_state$next [100] = automata_table[1];
                  3'h2:
                      \active_state$next [100] = automata_table[2];
                  3'h3:
                      \active_state$next [100] = automata_table[3];
                  3'h4:
                      \active_state$next [100] = automata_table[4];
                  3'h5:
                      \active_state$next [100] = automata_table[5];
                  3'h6:
                      \active_state$next [100] = automata_table[6];
                  3'h7:
                      \active_state$next [100] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[102:100])
                  3'h0:
                      \active_state$next [101] = automata_table[0];
                  3'h1:
                      \active_state$next [101] = automata_table[1];
                  3'h2:
                      \active_state$next [101] = automata_table[2];
                  3'h3:
                      \active_state$next [101] = automata_table[3];
                  3'h4:
                      \active_state$next [101] = automata_table[4];
                  3'h5:
                      \active_state$next [101] = automata_table[5];
                  3'h6:
                      \active_state$next [101] = automata_table[6];
                  3'h7:
                      \active_state$next [101] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[103:101])
                  3'h0:
                      \active_state$next [102] = automata_table[0];
                  3'h1:
                      \active_state$next [102] = automata_table[1];
                  3'h2:
                      \active_state$next [102] = automata_table[2];
                  3'h3:
                      \active_state$next [102] = automata_table[3];
                  3'h4:
                      \active_state$next [102] = automata_table[4];
                  3'h5:
                      \active_state$next [102] = automata_table[5];
                  3'h6:
                      \active_state$next [102] = automata_table[6];
                  3'h7:
                      \active_state$next [102] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[104:102])
                  3'h0:
                      \active_state$next [103] = automata_table[0];
                  3'h1:
                      \active_state$next [103] = automata_table[1];
                  3'h2:
                      \active_state$next [103] = automata_table[2];
                  3'h3:
                      \active_state$next [103] = automata_table[3];
                  3'h4:
                      \active_state$next [103] = automata_table[4];
                  3'h5:
                      \active_state$next [103] = automata_table[5];
                  3'h6:
                      \active_state$next [103] = automata_table[6];
                  3'h7:
                      \active_state$next [103] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[105:103])
                  3'h0:
                      \active_state$next [104] = automata_table[0];
                  3'h1:
                      \active_state$next [104] = automata_table[1];
                  3'h2:
                      \active_state$next [104] = automata_table[2];
                  3'h3:
                      \active_state$next [104] = automata_table[3];
                  3'h4:
                      \active_state$next [104] = automata_table[4];
                  3'h5:
                      \active_state$next [104] = automata_table[5];
                  3'h6:
                      \active_state$next [104] = automata_table[6];
                  3'h7:
                      \active_state$next [104] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[106:104])
                  3'h0:
                      \active_state$next [105] = automata_table[0];
                  3'h1:
                      \active_state$next [105] = automata_table[1];
                  3'h2:
                      \active_state$next [105] = automata_table[2];
                  3'h3:
                      \active_state$next [105] = automata_table[3];
                  3'h4:
                      \active_state$next [105] = automata_table[4];
                  3'h5:
                      \active_state$next [105] = automata_table[5];
                  3'h6:
                      \active_state$next [105] = automata_table[6];
                  3'h7:
                      \active_state$next [105] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[107:105])
                  3'h0:
                      \active_state$next [106] = automata_table[0];
                  3'h1:
                      \active_state$next [106] = automata_table[1];
                  3'h2:
                      \active_state$next [106] = automata_table[2];
                  3'h3:
                      \active_state$next [106] = automata_table[3];
                  3'h4:
                      \active_state$next [106] = automata_table[4];
                  3'h5:
                      \active_state$next [106] = automata_table[5];
                  3'h6:
                      \active_state$next [106] = automata_table[6];
                  3'h7:
                      \active_state$next [106] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[108:106])
                  3'h0:
                      \active_state$next [107] = automata_table[0];
                  3'h1:
                      \active_state$next [107] = automata_table[1];
                  3'h2:
                      \active_state$next [107] = automata_table[2];
                  3'h3:
                      \active_state$next [107] = automata_table[3];
                  3'h4:
                      \active_state$next [107] = automata_table[4];
                  3'h5:
                      \active_state$next [107] = automata_table[5];
                  3'h6:
                      \active_state$next [107] = automata_table[6];
                  3'h7:
                      \active_state$next [107] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[109:107])
                  3'h0:
                      \active_state$next [108] = automata_table[0];
                  3'h1:
                      \active_state$next [108] = automata_table[1];
                  3'h2:
                      \active_state$next [108] = automata_table[2];
                  3'h3:
                      \active_state$next [108] = automata_table[3];
                  3'h4:
                      \active_state$next [108] = automata_table[4];
                  3'h5:
                      \active_state$next [108] = automata_table[5];
                  3'h6:
                      \active_state$next [108] = automata_table[6];
                  3'h7:
                      \active_state$next [108] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[110:108])
                  3'h0:
                      \active_state$next [109] = automata_table[0];
                  3'h1:
                      \active_state$next [109] = automata_table[1];
                  3'h2:
                      \active_state$next [109] = automata_table[2];
                  3'h3:
                      \active_state$next [109] = automata_table[3];
                  3'h4:
                      \active_state$next [109] = automata_table[4];
                  3'h5:
                      \active_state$next [109] = automata_table[5];
                  3'h6:
                      \active_state$next [109] = automata_table[6];
                  3'h7:
                      \active_state$next [109] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[111:109])
                  3'h0:
                      \active_state$next [110] = automata_table[0];
                  3'h1:
                      \active_state$next [110] = automata_table[1];
                  3'h2:
                      \active_state$next [110] = automata_table[2];
                  3'h3:
                      \active_state$next [110] = automata_table[3];
                  3'h4:
                      \active_state$next [110] = automata_table[4];
                  3'h5:
                      \active_state$next [110] = automata_table[5];
                  3'h6:
                      \active_state$next [110] = automata_table[6];
                  3'h7:
                      \active_state$next [110] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[112:110])
                  3'h0:
                      \active_state$next [111] = automata_table[0];
                  3'h1:
                      \active_state$next [111] = automata_table[1];
                  3'h2:
                      \active_state$next [111] = automata_table[2];
                  3'h3:
                      \active_state$next [111] = automata_table[3];
                  3'h4:
                      \active_state$next [111] = automata_table[4];
                  3'h5:
                      \active_state$next [111] = automata_table[5];
                  3'h6:
                      \active_state$next [111] = automata_table[6];
                  3'h7:
                      \active_state$next [111] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[113:111])
                  3'h0:
                      \active_state$next [112] = automata_table[0];
                  3'h1:
                      \active_state$next [112] = automata_table[1];
                  3'h2:
                      \active_state$next [112] = automata_table[2];
                  3'h3:
                      \active_state$next [112] = automata_table[3];
                  3'h4:
                      \active_state$next [112] = automata_table[4];
                  3'h5:
                      \active_state$next [112] = automata_table[5];
                  3'h6:
                      \active_state$next [112] = automata_table[6];
                  3'h7:
                      \active_state$next [112] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[114:112])
                  3'h0:
                      \active_state$next [113] = automata_table[0];
                  3'h1:
                      \active_state$next [113] = automata_table[1];
                  3'h2:
                      \active_state$next [113] = automata_table[2];
                  3'h3:
                      \active_state$next [113] = automata_table[3];
                  3'h4:
                      \active_state$next [113] = automata_table[4];
                  3'h5:
                      \active_state$next [113] = automata_table[5];
                  3'h6:
                      \active_state$next [113] = automata_table[6];
                  3'h7:
                      \active_state$next [113] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[115:113])
                  3'h0:
                      \active_state$next [114] = automata_table[0];
                  3'h1:
                      \active_state$next [114] = automata_table[1];
                  3'h2:
                      \active_state$next [114] = automata_table[2];
                  3'h3:
                      \active_state$next [114] = automata_table[3];
                  3'h4:
                      \active_state$next [114] = automata_table[4];
                  3'h5:
                      \active_state$next [114] = automata_table[5];
                  3'h6:
                      \active_state$next [114] = automata_table[6];
                  3'h7:
                      \active_state$next [114] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[116:114])
                  3'h0:
                      \active_state$next [115] = automata_table[0];
                  3'h1:
                      \active_state$next [115] = automata_table[1];
                  3'h2:
                      \active_state$next [115] = automata_table[2];
                  3'h3:
                      \active_state$next [115] = automata_table[3];
                  3'h4:
                      \active_state$next [115] = automata_table[4];
                  3'h5:
                      \active_state$next [115] = automata_table[5];
                  3'h6:
                      \active_state$next [115] = automata_table[6];
                  3'h7:
                      \active_state$next [115] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[117:115])
                  3'h0:
                      \active_state$next [116] = automata_table[0];
                  3'h1:
                      \active_state$next [116] = automata_table[1];
                  3'h2:
                      \active_state$next [116] = automata_table[2];
                  3'h3:
                      \active_state$next [116] = automata_table[3];
                  3'h4:
                      \active_state$next [116] = automata_table[4];
                  3'h5:
                      \active_state$next [116] = automata_table[5];
                  3'h6:
                      \active_state$next [116] = automata_table[6];
                  3'h7:
                      \active_state$next [116] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[118:116])
                  3'h0:
                      \active_state$next [117] = automata_table[0];
                  3'h1:
                      \active_state$next [117] = automata_table[1];
                  3'h2:
                      \active_state$next [117] = automata_table[2];
                  3'h3:
                      \active_state$next [117] = automata_table[3];
                  3'h4:
                      \active_state$next [117] = automata_table[4];
                  3'h5:
                      \active_state$next [117] = automata_table[5];
                  3'h6:
                      \active_state$next [117] = automata_table[6];
                  3'h7:
                      \active_state$next [117] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[119:117])
                  3'h0:
                      \active_state$next [118] = automata_table[0];
                  3'h1:
                      \active_state$next [118] = automata_table[1];
                  3'h2:
                      \active_state$next [118] = automata_table[2];
                  3'h3:
                      \active_state$next [118] = automata_table[3];
                  3'h4:
                      \active_state$next [118] = automata_table[4];
                  3'h5:
                      \active_state$next [118] = automata_table[5];
                  3'h6:
                      \active_state$next [118] = automata_table[6];
                  3'h7:
                      \active_state$next [118] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[120:118])
                  3'h0:
                      \active_state$next [119] = automata_table[0];
                  3'h1:
                      \active_state$next [119] = automata_table[1];
                  3'h2:
                      \active_state$next [119] = automata_table[2];
                  3'h3:
                      \active_state$next [119] = automata_table[3];
                  3'h4:
                      \active_state$next [119] = automata_table[4];
                  3'h5:
                      \active_state$next [119] = automata_table[5];
                  3'h6:
                      \active_state$next [119] = automata_table[6];
                  3'h7:
                      \active_state$next [119] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[121:119])
                  3'h0:
                      \active_state$next [120] = automata_table[0];
                  3'h1:
                      \active_state$next [120] = automata_table[1];
                  3'h2:
                      \active_state$next [120] = automata_table[2];
                  3'h3:
                      \active_state$next [120] = automata_table[3];
                  3'h4:
                      \active_state$next [120] = automata_table[4];
                  3'h5:
                      \active_state$next [120] = automata_table[5];
                  3'h6:
                      \active_state$next [120] = automata_table[6];
                  3'h7:
                      \active_state$next [120] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[122:120])
                  3'h0:
                      \active_state$next [121] = automata_table[0];
                  3'h1:
                      \active_state$next [121] = automata_table[1];
                  3'h2:
                      \active_state$next [121] = automata_table[2];
                  3'h3:
                      \active_state$next [121] = automata_table[3];
                  3'h4:
                      \active_state$next [121] = automata_table[4];
                  3'h5:
                      \active_state$next [121] = automata_table[5];
                  3'h6:
                      \active_state$next [121] = automata_table[6];
                  3'h7:
                      \active_state$next [121] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[123:121])
                  3'h0:
                      \active_state$next [122] = automata_table[0];
                  3'h1:
                      \active_state$next [122] = automata_table[1];
                  3'h2:
                      \active_state$next [122] = automata_table[2];
                  3'h3:
                      \active_state$next [122] = automata_table[3];
                  3'h4:
                      \active_state$next [122] = automata_table[4];
                  3'h5:
                      \active_state$next [122] = automata_table[5];
                  3'h6:
                      \active_state$next [122] = automata_table[6];
                  3'h7:
                      \active_state$next [122] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[124:122])
                  3'h0:
                      \active_state$next [123] = automata_table[0];
                  3'h1:
                      \active_state$next [123] = automata_table[1];
                  3'h2:
                      \active_state$next [123] = automata_table[2];
                  3'h3:
                      \active_state$next [123] = automata_table[3];
                  3'h4:
                      \active_state$next [123] = automata_table[4];
                  3'h5:
                      \active_state$next [123] = automata_table[5];
                  3'h6:
                      \active_state$next [123] = automata_table[6];
                  3'h7:
                      \active_state$next [123] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[125:123])
                  3'h0:
                      \active_state$next [124] = automata_table[0];
                  3'h1:
                      \active_state$next [124] = automata_table[1];
                  3'h2:
                      \active_state$next [124] = automata_table[2];
                  3'h3:
                      \active_state$next [124] = automata_table[3];
                  3'h4:
                      \active_state$next [124] = automata_table[4];
                  3'h5:
                      \active_state$next [124] = automata_table[5];
                  3'h6:
                      \active_state$next [124] = automata_table[6];
                  3'h7:
                      \active_state$next [124] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[126:124])
                  3'h0:
                      \active_state$next [125] = automata_table[0];
                  3'h1:
                      \active_state$next [125] = automata_table[1];
                  3'h2:
                      \active_state$next [125] = automata_table[2];
                  3'h3:
                      \active_state$next [125] = automata_table[3];
                  3'h4:
                      \active_state$next [125] = automata_table[4];
                  3'h5:
                      \active_state$next [125] = automata_table[5];
                  3'h6:
                      \active_state$next [125] = automata_table[6];
                  3'h7:
                      \active_state$next [125] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[127:125])
                  3'h0:
                      \active_state$next [126] = automata_table[0];
                  3'h1:
                      \active_state$next [126] = automata_table[1];
                  3'h2:
                      \active_state$next [126] = automata_table[2];
                  3'h3:
                      \active_state$next [126] = automata_table[3];
                  3'h4:
                      \active_state$next [126] = automata_table[4];
                  3'h5:
                      \active_state$next [126] = automata_table[5];
                  3'h6:
                      \active_state$next [126] = automata_table[6];
                  3'h7:
                      \active_state$next [126] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[128:126])
                  3'h0:
                      \active_state$next [127] = automata_table[0];
                  3'h1:
                      \active_state$next [127] = automata_table[1];
                  3'h2:
                      \active_state$next [127] = automata_table[2];
                  3'h3:
                      \active_state$next [127] = automata_table[3];
                  3'h4:
                      \active_state$next [127] = automata_table[4];
                  3'h5:
                      \active_state$next [127] = automata_table[5];
                  3'h6:
                      \active_state$next [127] = automata_table[6];
                  3'h7:
                      \active_state$next [127] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[129:127])
                  3'h0:
                      \active_state$next [128] = automata_table[0];
                  3'h1:
                      \active_state$next [128] = automata_table[1];
                  3'h2:
                      \active_state$next [128] = automata_table[2];
                  3'h3:
                      \active_state$next [128] = automata_table[3];
                  3'h4:
                      \active_state$next [128] = automata_table[4];
                  3'h5:
                      \active_state$next [128] = automata_table[5];
                  3'h6:
                      \active_state$next [128] = automata_table[6];
                  3'h7:
                      \active_state$next [128] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[130:128])
                  3'h0:
                      \active_state$next [129] = automata_table[0];
                  3'h1:
                      \active_state$next [129] = automata_table[1];
                  3'h2:
                      \active_state$next [129] = automata_table[2];
                  3'h3:
                      \active_state$next [129] = automata_table[3];
                  3'h4:
                      \active_state$next [129] = automata_table[4];
                  3'h5:
                      \active_state$next [129] = automata_table[5];
                  3'h6:
                      \active_state$next [129] = automata_table[6];
                  3'h7:
                      \active_state$next [129] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[131:129])
                  3'h0:
                      \active_state$next [130] = automata_table[0];
                  3'h1:
                      \active_state$next [130] = automata_table[1];
                  3'h2:
                      \active_state$next [130] = automata_table[2];
                  3'h3:
                      \active_state$next [130] = automata_table[3];
                  3'h4:
                      \active_state$next [130] = automata_table[4];
                  3'h5:
                      \active_state$next [130] = automata_table[5];
                  3'h6:
                      \active_state$next [130] = automata_table[6];
                  3'h7:
                      \active_state$next [130] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[132:130])
                  3'h0:
                      \active_state$next [131] = automata_table[0];
                  3'h1:
                      \active_state$next [131] = automata_table[1];
                  3'h2:
                      \active_state$next [131] = automata_table[2];
                  3'h3:
                      \active_state$next [131] = automata_table[3];
                  3'h4:
                      \active_state$next [131] = automata_table[4];
                  3'h5:
                      \active_state$next [131] = automata_table[5];
                  3'h6:
                      \active_state$next [131] = automata_table[6];
                  3'h7:
                      \active_state$next [131] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[133:131])
                  3'h0:
                      \active_state$next [132] = automata_table[0];
                  3'h1:
                      \active_state$next [132] = automata_table[1];
                  3'h2:
                      \active_state$next [132] = automata_table[2];
                  3'h3:
                      \active_state$next [132] = automata_table[3];
                  3'h4:
                      \active_state$next [132] = automata_table[4];
                  3'h5:
                      \active_state$next [132] = automata_table[5];
                  3'h6:
                      \active_state$next [132] = automata_table[6];
                  3'h7:
                      \active_state$next [132] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[134:132])
                  3'h0:
                      \active_state$next [133] = automata_table[0];
                  3'h1:
                      \active_state$next [133] = automata_table[1];
                  3'h2:
                      \active_state$next [133] = automata_table[2];
                  3'h3:
                      \active_state$next [133] = automata_table[3];
                  3'h4:
                      \active_state$next [133] = automata_table[4];
                  3'h5:
                      \active_state$next [133] = automata_table[5];
                  3'h6:
                      \active_state$next [133] = automata_table[6];
                  3'h7:
                      \active_state$next [133] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[135:133])
                  3'h0:
                      \active_state$next [134] = automata_table[0];
                  3'h1:
                      \active_state$next [134] = automata_table[1];
                  3'h2:
                      \active_state$next [134] = automata_table[2];
                  3'h3:
                      \active_state$next [134] = automata_table[3];
                  3'h4:
                      \active_state$next [134] = automata_table[4];
                  3'h5:
                      \active_state$next [134] = automata_table[5];
                  3'h6:
                      \active_state$next [134] = automata_table[6];
                  3'h7:
                      \active_state$next [134] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[136:134])
                  3'h0:
                      \active_state$next [135] = automata_table[0];
                  3'h1:
                      \active_state$next [135] = automata_table[1];
                  3'h2:
                      \active_state$next [135] = automata_table[2];
                  3'h3:
                      \active_state$next [135] = automata_table[3];
                  3'h4:
                      \active_state$next [135] = automata_table[4];
                  3'h5:
                      \active_state$next [135] = automata_table[5];
                  3'h6:
                      \active_state$next [135] = automata_table[6];
                  3'h7:
                      \active_state$next [135] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[137:135])
                  3'h0:
                      \active_state$next [136] = automata_table[0];
                  3'h1:
                      \active_state$next [136] = automata_table[1];
                  3'h2:
                      \active_state$next [136] = automata_table[2];
                  3'h3:
                      \active_state$next [136] = automata_table[3];
                  3'h4:
                      \active_state$next [136] = automata_table[4];
                  3'h5:
                      \active_state$next [136] = automata_table[5];
                  3'h6:
                      \active_state$next [136] = automata_table[6];
                  3'h7:
                      \active_state$next [136] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[138:136])
                  3'h0:
                      \active_state$next [137] = automata_table[0];
                  3'h1:
                      \active_state$next [137] = automata_table[1];
                  3'h2:
                      \active_state$next [137] = automata_table[2];
                  3'h3:
                      \active_state$next [137] = automata_table[3];
                  3'h4:
                      \active_state$next [137] = automata_table[4];
                  3'h5:
                      \active_state$next [137] = automata_table[5];
                  3'h6:
                      \active_state$next [137] = automata_table[6];
                  3'h7:
                      \active_state$next [137] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[139:137])
                  3'h0:
                      \active_state$next [138] = automata_table[0];
                  3'h1:
                      \active_state$next [138] = automata_table[1];
                  3'h2:
                      \active_state$next [138] = automata_table[2];
                  3'h3:
                      \active_state$next [138] = automata_table[3];
                  3'h4:
                      \active_state$next [138] = automata_table[4];
                  3'h5:
                      \active_state$next [138] = automata_table[5];
                  3'h6:
                      \active_state$next [138] = automata_table[6];
                  3'h7:
                      \active_state$next [138] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[140:138])
                  3'h0:
                      \active_state$next [139] = automata_table[0];
                  3'h1:
                      \active_state$next [139] = automata_table[1];
                  3'h2:
                      \active_state$next [139] = automata_table[2];
                  3'h3:
                      \active_state$next [139] = automata_table[3];
                  3'h4:
                      \active_state$next [139] = automata_table[4];
                  3'h5:
                      \active_state$next [139] = automata_table[5];
                  3'h6:
                      \active_state$next [139] = automata_table[6];
                  3'h7:
                      \active_state$next [139] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[141:139])
                  3'h0:
                      \active_state$next [140] = automata_table[0];
                  3'h1:
                      \active_state$next [140] = automata_table[1];
                  3'h2:
                      \active_state$next [140] = automata_table[2];
                  3'h3:
                      \active_state$next [140] = automata_table[3];
                  3'h4:
                      \active_state$next [140] = automata_table[4];
                  3'h5:
                      \active_state$next [140] = automata_table[5];
                  3'h6:
                      \active_state$next [140] = automata_table[6];
                  3'h7:
                      \active_state$next [140] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[142:140])
                  3'h0:
                      \active_state$next [141] = automata_table[0];
                  3'h1:
                      \active_state$next [141] = automata_table[1];
                  3'h2:
                      \active_state$next [141] = automata_table[2];
                  3'h3:
                      \active_state$next [141] = automata_table[3];
                  3'h4:
                      \active_state$next [141] = automata_table[4];
                  3'h5:
                      \active_state$next [141] = automata_table[5];
                  3'h6:
                      \active_state$next [141] = automata_table[6];
                  3'h7:
                      \active_state$next [141] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[143:141])
                  3'h0:
                      \active_state$next [142] = automata_table[0];
                  3'h1:
                      \active_state$next [142] = automata_table[1];
                  3'h2:
                      \active_state$next [142] = automata_table[2];
                  3'h3:
                      \active_state$next [142] = automata_table[3];
                  3'h4:
                      \active_state$next [142] = automata_table[4];
                  3'h5:
                      \active_state$next [142] = automata_table[5];
                  3'h6:
                      \active_state$next [142] = automata_table[6];
                  3'h7:
                      \active_state$next [142] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[144:142])
                  3'h0:
                      \active_state$next [143] = automata_table[0];
                  3'h1:
                      \active_state$next [143] = automata_table[1];
                  3'h2:
                      \active_state$next [143] = automata_table[2];
                  3'h3:
                      \active_state$next [143] = automata_table[3];
                  3'h4:
                      \active_state$next [143] = automata_table[4];
                  3'h5:
                      \active_state$next [143] = automata_table[5];
                  3'h6:
                      \active_state$next [143] = automata_table[6];
                  3'h7:
                      \active_state$next [143] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[145:143])
                  3'h0:
                      \active_state$next [144] = automata_table[0];
                  3'h1:
                      \active_state$next [144] = automata_table[1];
                  3'h2:
                      \active_state$next [144] = automata_table[2];
                  3'h3:
                      \active_state$next [144] = automata_table[3];
                  3'h4:
                      \active_state$next [144] = automata_table[4];
                  3'h5:
                      \active_state$next [144] = automata_table[5];
                  3'h6:
                      \active_state$next [144] = automata_table[6];
                  3'h7:
                      \active_state$next [144] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[146:144])
                  3'h0:
                      \active_state$next [145] = automata_table[0];
                  3'h1:
                      \active_state$next [145] = automata_table[1];
                  3'h2:
                      \active_state$next [145] = automata_table[2];
                  3'h3:
                      \active_state$next [145] = automata_table[3];
                  3'h4:
                      \active_state$next [145] = automata_table[4];
                  3'h5:
                      \active_state$next [145] = automata_table[5];
                  3'h6:
                      \active_state$next [145] = automata_table[6];
                  3'h7:
                      \active_state$next [145] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[147:145])
                  3'h0:
                      \active_state$next [146] = automata_table[0];
                  3'h1:
                      \active_state$next [146] = automata_table[1];
                  3'h2:
                      \active_state$next [146] = automata_table[2];
                  3'h3:
                      \active_state$next [146] = automata_table[3];
                  3'h4:
                      \active_state$next [146] = automata_table[4];
                  3'h5:
                      \active_state$next [146] = automata_table[5];
                  3'h6:
                      \active_state$next [146] = automata_table[6];
                  3'h7:
                      \active_state$next [146] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[148:146])
                  3'h0:
                      \active_state$next [147] = automata_table[0];
                  3'h1:
                      \active_state$next [147] = automata_table[1];
                  3'h2:
                      \active_state$next [147] = automata_table[2];
                  3'h3:
                      \active_state$next [147] = automata_table[3];
                  3'h4:
                      \active_state$next [147] = automata_table[4];
                  3'h5:
                      \active_state$next [147] = automata_table[5];
                  3'h6:
                      \active_state$next [147] = automata_table[6];
                  3'h7:
                      \active_state$next [147] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[149:147])
                  3'h0:
                      \active_state$next [148] = automata_table[0];
                  3'h1:
                      \active_state$next [148] = automata_table[1];
                  3'h2:
                      \active_state$next [148] = automata_table[2];
                  3'h3:
                      \active_state$next [148] = automata_table[3];
                  3'h4:
                      \active_state$next [148] = automata_table[4];
                  3'h5:
                      \active_state$next [148] = automata_table[5];
                  3'h6:
                      \active_state$next [148] = automata_table[6];
                  3'h7:
                      \active_state$next [148] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[150:148])
                  3'h0:
                      \active_state$next [149] = automata_table[0];
                  3'h1:
                      \active_state$next [149] = automata_table[1];
                  3'h2:
                      \active_state$next [149] = automata_table[2];
                  3'h3:
                      \active_state$next [149] = automata_table[3];
                  3'h4:
                      \active_state$next [149] = automata_table[4];
                  3'h5:
                      \active_state$next [149] = automata_table[5];
                  3'h6:
                      \active_state$next [149] = automata_table[6];
                  3'h7:
                      \active_state$next [149] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[151:149])
                  3'h0:
                      \active_state$next [150] = automata_table[0];
                  3'h1:
                      \active_state$next [150] = automata_table[1];
                  3'h2:
                      \active_state$next [150] = automata_table[2];
                  3'h3:
                      \active_state$next [150] = automata_table[3];
                  3'h4:
                      \active_state$next [150] = automata_table[4];
                  3'h5:
                      \active_state$next [150] = automata_table[5];
                  3'h6:
                      \active_state$next [150] = automata_table[6];
                  3'h7:
                      \active_state$next [150] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[152:150])
                  3'h0:
                      \active_state$next [151] = automata_table[0];
                  3'h1:
                      \active_state$next [151] = automata_table[1];
                  3'h2:
                      \active_state$next [151] = automata_table[2];
                  3'h3:
                      \active_state$next [151] = automata_table[3];
                  3'h4:
                      \active_state$next [151] = automata_table[4];
                  3'h5:
                      \active_state$next [151] = automata_table[5];
                  3'h6:
                      \active_state$next [151] = automata_table[6];
                  3'h7:
                      \active_state$next [151] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[153:151])
                  3'h0:
                      \active_state$next [152] = automata_table[0];
                  3'h1:
                      \active_state$next [152] = automata_table[1];
                  3'h2:
                      \active_state$next [152] = automata_table[2];
                  3'h3:
                      \active_state$next [152] = automata_table[3];
                  3'h4:
                      \active_state$next [152] = automata_table[4];
                  3'h5:
                      \active_state$next [152] = automata_table[5];
                  3'h6:
                      \active_state$next [152] = automata_table[6];
                  3'h7:
                      \active_state$next [152] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[154:152])
                  3'h0:
                      \active_state$next [153] = automata_table[0];
                  3'h1:
                      \active_state$next [153] = automata_table[1];
                  3'h2:
                      \active_state$next [153] = automata_table[2];
                  3'h3:
                      \active_state$next [153] = automata_table[3];
                  3'h4:
                      \active_state$next [153] = automata_table[4];
                  3'h5:
                      \active_state$next [153] = automata_table[5];
                  3'h6:
                      \active_state$next [153] = automata_table[6];
                  3'h7:
                      \active_state$next [153] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[155:153])
                  3'h0:
                      \active_state$next [154] = automata_table[0];
                  3'h1:
                      \active_state$next [154] = automata_table[1];
                  3'h2:
                      \active_state$next [154] = automata_table[2];
                  3'h3:
                      \active_state$next [154] = automata_table[3];
                  3'h4:
                      \active_state$next [154] = automata_table[4];
                  3'h5:
                      \active_state$next [154] = automata_table[5];
                  3'h6:
                      \active_state$next [154] = automata_table[6];
                  3'h7:
                      \active_state$next [154] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[156:154])
                  3'h0:
                      \active_state$next [155] = automata_table[0];
                  3'h1:
                      \active_state$next [155] = automata_table[1];
                  3'h2:
                      \active_state$next [155] = automata_table[2];
                  3'h3:
                      \active_state$next [155] = automata_table[3];
                  3'h4:
                      \active_state$next [155] = automata_table[4];
                  3'h5:
                      \active_state$next [155] = automata_table[5];
                  3'h6:
                      \active_state$next [155] = automata_table[6];
                  3'h7:
                      \active_state$next [155] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[157:155])
                  3'h0:
                      \active_state$next [156] = automata_table[0];
                  3'h1:
                      \active_state$next [156] = automata_table[1];
                  3'h2:
                      \active_state$next [156] = automata_table[2];
                  3'h3:
                      \active_state$next [156] = automata_table[3];
                  3'h4:
                      \active_state$next [156] = automata_table[4];
                  3'h5:
                      \active_state$next [156] = automata_table[5];
                  3'h6:
                      \active_state$next [156] = automata_table[6];
                  3'h7:
                      \active_state$next [156] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[158:156])
                  3'h0:
                      \active_state$next [157] = automata_table[0];
                  3'h1:
                      \active_state$next [157] = automata_table[1];
                  3'h2:
                      \active_state$next [157] = automata_table[2];
                  3'h3:
                      \active_state$next [157] = automata_table[3];
                  3'h4:
                      \active_state$next [157] = automata_table[4];
                  3'h5:
                      \active_state$next [157] = automata_table[5];
                  3'h6:
                      \active_state$next [157] = automata_table[6];
                  3'h7:
                      \active_state$next [157] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez (active_state[159:157])
                  3'h0:
                      \active_state$next [158] = automata_table[0];
                  3'h1:
                      \active_state$next [158] = automata_table[1];
                  3'h2:
                      \active_state$next [158] = automata_table[2];
                  3'h3:
                      \active_state$next [158] = automata_table[3];
                  3'h4:
                      \active_state$next [158] = automata_table[4];
                  3'h5:
                      \active_state$next [158] = automata_table[5];
                  3'h6:
                      \active_state$next [158] = automata_table[6];
                  3'h7:
                      \active_state$next [158] = automata_table[7];
                endcase
                (* full_case = 32'd1 *)
                casez ({ active_state[0], active_state[159:158] })
                  3'h0:
                      \active_state$next [159] = automata_table[0];
                  3'h1:
                      \active_state$next [159] = automata_table[1];
                  3'h2:
                      \active_state$next [159] = automata_table[2];
                  3'h3:
                      \active_state$next [159] = automata_table[3];
                  3'h4:
                      \active_state$next [159] = automata_table[4];
                  3'h5:
                      \active_state$next [159] = automata_table[5];
                  3'h6:
                      \active_state$next [159] = automata_table[6];
                  3'h7:
                      \active_state$next [159] = automata_table[7];
                endcase
              end
          endcase
        end
    endcase
    casez (need_topline_copy)
      1'h1:
          \active_state$next  = topline_state;
    endcase
    casez (\rst$2 )
      1'h1:
          \active_state$next  = 160'h0000000000000000000100000000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \speed_counter$next  = speed_counter;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                \speed_counter$next  = \$192 [7:0];
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \speed_counter$next  = 8'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \frame_frozen$next  = frame_frozen;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
              begin
                (* full_case = 32'd1 *)
                casez (\$196 )
                  1'h1:
                      \frame_frozen$next  = \$198 ;
                  default:
                      \frame_frozen$next  = 1'h1;
                endcase
                casez (need_frozen_exception)
                  1'h1:
                      \frame_frozen$next  = 1'h0;
                endcase
              end
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \frame_frozen$next  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    scribble_now = 1'h0;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
              begin
                scribble_now = 1'h0;
                casez (\$signal )
                  1'h1:
                      scribble_now = 1'h1;
                endcase
                casez (\$signal$63 )
                  1'h1:
                      scribble_now = 1'h1;
                endcase
              end
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \topline_state$next  = topline_state;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
              begin
                casez (scribble_now)
                  1'h1:
                      \topline_state$next [80] = 1'h1;
                endcase
                casez (\scribble_now$200 )
                  1'h1:
                      \topline_state$next [81] = 1'h0;
                endcase
                casez (\scribble_now$201 )
                  1'h1:
                    begin
                      \topline_state$next [0] = 1'h1;
                      \topline_state$next [33] = 1'h1;
                      \topline_state$next [66] = 1'h1;
                      \topline_state$next [99] = 1'h1;
                      \topline_state$next [132] = 1'h1;
                    end
                endcase
                casez (\scribble_now$202 )
                  1'h1:
                    begin
                      \topline_state$next [1] = 1'h0;
                      \topline_state$next [35] = 1'h0;
                      \topline_state$next [69] = 1'h0;
                      \topline_state$next [103] = 1'h0;
                      \topline_state$next [137] = 1'h0;
                    end
                endcase
              end
          endcase
    endcase
    casez (need_topline_backcopy)
      1'h1:
          \topline_state$next  = active_state;
    endcase
    casez (\rst$2 )
      1'h1:
          \topline_state$next  = 160'h0000000000000000000100000000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \scribble_now$200  = 1'h0;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
              begin
                \scribble_now$200  = 1'h0;
                casez (\$signal$72 )
                  1'h1:
                      \scribble_now$200  = 1'h1;
                endcase
                casez (\$signal$81 )
                  1'h1:
                      \scribble_now$200  = 1'h1;
                endcase
              end
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \scribble_now$201  = 1'h0;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
              begin
                \scribble_now$201  = 1'h0;
                casez (\$signal$90 )
                  1'h1:
                      \scribble_now$201  = 1'h1;
                endcase
                casez (\$signal$99 )
                  1'h1:
                      \scribble_now$201  = 1'h1;
                endcase
              end
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \scribble_now$202  = 1'h0;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
              begin
                \scribble_now$202  = 1'h0;
                casez (\$signal$108 )
                  1'h1:
                      \scribble_now$202  = 1'h1;
                endcase
                casez (\$signal$117 )
                  1'h1:
                      \scribble_now$202  = 1'h1;
                endcase
              end
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \automata_table$next  = automata_table;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (need_automata_next)
                  1'h1:
                      (* full_case = 32'd1 *)
                      casez (automata_next)
                        2'h0:
                            \automata_table$next  = 8'h1e;
                        2'h1:
                            \automata_table$next  = 8'h6e;
                        2'h2:
                            \automata_table$next  = 8'h6a;
                        2'h3:
                            \automata_table$next  = 8'h0e;
                      endcase
                endcase
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \automata_table$next  = 8'h1e;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \need_topline_copy$next  = need_topline_copy;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                \need_topline_copy$next  = 1'h1;
          endcase
    endcase
    casez (need_topline_copy)
      1'h1:
          \need_topline_copy$next  = 1'h0;
    endcase
    casez (\rst$2 )
      1'h1:
          \need_topline_copy$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \opening_countdown_timer$next  = opening_countdown_timer;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (\$203 )
                  1'h1:
                      \opening_countdown_timer$next  = \$206 [5:0];
                endcase
          endcase
    endcase
    casez (opening_countdown_timer_late_reset)
      1'h1:
          \opening_countdown_timer$next  = 6'h3f;
    endcase
    casez (\rst$2 )
      1'h1:
          \opening_countdown_timer$next  = 6'h3f;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \audgen_state$next  = audgen_state;
    casez (video_clk_div_stb)
      1'h1:
          casez (video_vsync_stb)
            1'h1:
                casez (\$208 )
                  1'h1:
                      \audgen_state$next  = topline_state;
                endcase
          endcase
    endcase
    casez (audgen_word_update_stb)
      1'h1:
          casez (\$210 )
            1'h1:
                casez (audio_divide_stb)
                  1'h1:
                      \audgen_state$next  = { audgen_state[0], audgen_state[159:1] };
                endcase
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \audgen_state$next  = 160'h0000000000000000000100000000000000000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \audgen_dac$next  = audgen_dac;
    casez (audgen_bit_update_stb)
      1'h1:
          \audgen_dac$next  = \$220 ;
    endcase
    casez (\rst$2 )
      1'h1:
          \audgen_dac$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \audio_divide_counter$next  = audio_divide_counter;
    casez (audgen_word_update_stb)
      1'h1:
          casez (\$222 )
            1'h1:
                \audio_divide_counter$next  = \$227 [1:0];
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \audio_divide_counter$next  = 2'h3;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \video_vs$next  = video_vs;
    casez (video_clk_div_stb)
      1'h1:
          \video_vs$next  = \$233 ;
    endcase
    casez (\rst$2 )
      1'h1:
          \video_vs$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \video_hs$next  = video_hs;
    casez (video_clk_div_stb)
      1'h1:
          \video_hs$next  = \$235 ;
    endcase
    casez (\rst$2 )
      1'h1:
          \video_hs$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \video_x_count$next  = video_x_count;
    casez (video_clk_div_stb)
      1'h1:
        begin
          \video_x_count$next  = \$238 [9:0];
          casez (\$240 )
            1'h1:
                \video_x_count$next  = 10'h000;
          endcase
        end
    endcase
    casez (\rst$2 )
      1'h1:
          \video_x_count$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \video_y_count$next  = video_y_count;
    casez (video_clk_div_stb)
      1'h1:
          casez (\$242 )
            1'h1:
              begin
                \video_y_count$next  = \$245 [9:0];
                casez (\$247 )
                  1'h1:
                      \video_y_count$next  = 10'h000;
                endcase
              end
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \video_y_count$next  = 10'h000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \video_de$next  = video_de;
    casez (video_clk_div_stb)
      1'h1:
          \video_de$next  = video_active;
    endcase
    casez (\rst$2 )
      1'h1:
          \video_de$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \audgen_accum$next  = \$250 [21:0];
    casez (audgen_mclk_stb)
      1'h1:
          \audgen_accum$next  = \$255 [21:0];
    endcase
    casez (\rst$2 )
      1'h1:
          \audgen_accum$next  = 22'h0b5464;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \audgen_mclk$next  = audgen_mclk;
    casez (audgen_mclk_stb)
      1'h1:
          \audgen_mclk$next  = \$259 ;
    endcase
    casez (\rst$2 )
      1'h1:
          \audgen_mclk$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \audgen_slck_update$next  = 1'h0;
    casez (\$265 )
      1'h1:
          casez (\$267 )
            1'h1:
                \audgen_slck_update$next  = 1'h1;
          endcase
    endcase
    casez (\rst$2 )
      1'h1:
          \audgen_slck_update$next  = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \audgen_slck_count$next  = audgen_slck_count;
    casez (\$271 )
      1'h1:
          \audgen_slck_count$next  = \$274 [1:0];
    endcase
    casez (\rst$2 )
      1'h1:
          \audgen_slck_count$next  = 2'h3;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \audgen_lrck_count$next  = audgen_lrck_count;
    casez (\$278 )
      1'h1:
          \audgen_lrck_count$next  = \$281 [7:0];
    endcase
    casez (\rst$2 )
      1'h1:
          \audgen_lrck_count$next  = 8'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    audgen_word_update_stb = 1'h0;
    casez (audgen_slck_update)
      1'h1:
          casez (\$283 )
            1'h1:
                audgen_word_update_stb = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    audgen_bit_update_stb = 1'h0;
    casez (audgen_slck_update)
      1'h1:
          audgen_bit_update_stb = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    \cont1_key_last$next  = cont1_key;
    casez (\rst$2 )
      1'h1:
          \cont1_key_last$next  = 32'd0;
    endcase
  end
  assign \$191  = \$192 ;
  assign \$205  = \$206 ;
  assign \$226  = \$227 ;
  assign \$237  = \$238 ;
  assign \$244  = \$245 ;
  assign \$249  = \$250 ;
  assign \$252  = \$255 ;
  assign \$273  = \$274 ;
  assign \$280  = \$281 ;
  assign audio_lrck = audgen_lrck;
  assign audio_dac = audgen_dac;
  assign audio_mclk = audgen_mclk;
  assign audgen_lrck_internal = audgen_lrck_count[6:2];
  assign audgen_silenced = audgen_lrck_count[6];
  assign audgen_channel_internal = audgen_lrck_count[5:2];
  assign audgen_channel_select = audgen_lrck;
  assign audgen_lrck = audgen_lrck_count[7];
  assign audgen_slck = \$261 ;
  assign audgen_mclk_stb = \$257 ;
  assign audio_high = audgen_state[0];
  assign audio_divide_stb = \$216 ;
  assign audio_output_word_bit = \$214 ;
  assign opening_wants_frozen = \$167 ;
  assign \release$162  = \$165 ;
  assign \press$157  = \$160 ;
  assign \hold$156  = cont1_key[1];
  assign \release$151  = \$154 ;
  assign \press$146  = \$149 ;
  assign \hold$145  = cont1_key[3];
  assign \release$140  = \$143 ;
  assign \press$135  = \$138 ;
  assign \hold$134  = cont1_key[2];
  assign \release  = \$132 ;
  assign press = \$128 ;
  assign hold = cont1_key[0];
  assign r_press = \$49 ;
  assign l_press = \$45 ;
  assign select = cont1_key[14];
  assign video_active = \$27 ;
  assign video_vsync_stb = \$13 ;
  assign video_hsync_stb = \$5 ;
  assign video_rgb_clk90 = video_clk_div_clk90;
  assign video_rgb_clk = video_clk_div_clk;
  assign \init_done$next  = 1'h1;
  assign \rst$2  = rst;
  assign \clk$1  = clk;
  assign boot_clk = clk;
endmodule

module \amaranth_core.video_clk_div (rst, \clk$1 , clk90, stb, clk);
  reg \$auto$verilog_backend.cc:2083:dump_module$2  = 0;
  input clk;
  wire clk;
  output \clk$1 ;
  wire \clk$1 ;
  output clk90;
  wire clk90;
  reg [59:0] clk_reg = 60'hfffffffc0000000;
  reg [59:0] \clk_reg$next ;
  input rst;
  wire rst;
  output stb;
  wire stb;
  reg [59:0] stb_reg = 60'h000000000000001;
  reg [59:0] \stb_reg$next ;
  always @(posedge clk, posedge rst)
    if (rst) clk_reg <= 60'hfffffffc0000000;
    else clk_reg <= \clk_reg$next ;
  always @(posedge clk, posedge rst)
    if (rst) stb_reg <= 60'h000000000000001;
    else stb_reg <= \stb_reg$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    \clk_reg$next  = { clk_reg[58:0], clk_reg[59] };
    casez (rst)
      1'h1:
          \clk_reg$next  = 60'hfffffffc0000000;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    \stb_reg$next  = { stb_reg[58:0], stb_reg[59] };
    casez (rst)
      1'h1:
          \stb_reg$next  = 60'h000000000000001;
    endcase
  end
  assign stb = stb_reg[0];
  assign clk90 = clk_reg[15];
  assign \clk$1  = clk_reg[0];
endmodule
